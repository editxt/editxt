# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: cos.js
name = 'Cach√© Object Script'
file_patterns = ['*.cos', '*.cos', '*.cls']

flags = re.IGNORECASE | re.MULTILINE

keyword = """
    break catch close continue do d else elseif for goto halt hang h if
    job j kill k lock l merge new open quit q read r return set s
    tcommit throw trollback try tstart use view while write w xecute x
    zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert
    zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint
    zquit zsync ascii
    """.split()

number = [RE(r"\b(?:\d+(?:\.\d*)?|\.\d+)")]

built_in = [RE(r"\$\$?[a-zA-Z]+")]

keyword0 = [RE(r"\$\$\$[a-zA-Z]+")]

symbol = [RE(r"\^%?[a-zA-Z][\w]*")]

keyword1 = [RE(r"##class")]

class string:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': '""', 'relevance': 0},
    ]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', doctag),
    ]

rules = [
    ('keyword', keyword),
    ('number', number),
    ('string', RE(r"\""), [RE(r"\"")], string),
    ('comment', RE(r"//"), [RE(r"$")], comment),
    ('comment', RE(r"/\*"), [RE(r"\*/")], comment),
    ('built_in', built_in),
    ('keyword', keyword0),
    ('symbol', symbol),
    ('keyword', keyword1),
    ('_group0', RE(r"&sql\("), [RE(r"\)")], 'sql'),
    ('_group1', RE(r"&(?:js|jscript|javascript)<"), [RE(r">")], 'javascript'),
    ('_group2', RE(r"&html<\s*<"), [RE(r">\s*>")], 'xml'),
]
