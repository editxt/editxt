# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: capnproto.js
name = 'Capâ€™n Proto'
file_patterns = ['*.capnproto', '*.capnp']

built_in = """
    Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32
    Float64 Text Data AnyPointer AnyStruct Capability List
    """.split()

keyword = """
    struct enum interface union group import using const annotation
    extends in of on as with from fixed
    """.split()

class string:
    default_text_color = DELIMITER
    rules = [('operator.escape', [RE(r"\\[\s\S]")])]

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]),
    ]

class title0:
    default_text_color = DELIMITER
    rules = [('title', RE(r"[a-zA-Z]\w*"), [RE(r"\B|\b")])]
title0.__name__ = 'title'

class class0:
    default_text_color = DELIMITER
    rules = [('keyword', ['struct', 'enum']), ('title', title0, [RE(r"\B\b")])]
class0.__name__ = 'class'

class class2:
    default_text_color = DELIMITER
    rules = [('keyword', ['interface']), ('title', title0, [RE(r"\B\b")])]
class2.__name__ = 'class'

rules = [
    ('built_in', built_in),
    ('keyword', keyword),
    ('literal', ['true', 'false']),
    ('string', RE(r"\""), [RE(r"\"")], string),
    ('number', [RE(r"\b\d+(?:\.\d+)?")]),
    ('comment', RE(r"#"), [RE(r"$")], comment),
    ('meta', [RE(r"@0x[\w\d]{16};")]),
    ('number', [RE(r"@\d+\b")]),
    ('class', RE(r"\b(?:struct|enum)"), [RE(r"\{")], class0),
    ('class', RE(r"\b(?:interface)"), [RE(r"\{")], class2),
]
