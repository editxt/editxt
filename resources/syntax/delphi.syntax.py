# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: delphi.js
name = 'Delphi'
file_patterns = ['*.delphi']

flags = re.IGNORECASE | re.MULTILINE

keyword = [
    'exports',
    'register',
    'file',
    'shl',
    'array',
    'record',
    'property',
    'for',
    'mod',
    'while',
    'set',
    'ally',
    'label',
    'uses',
    'raise',
    'not',
    'stored',
    'class',
    'safecall',
    'var',
    'interface',
    'or',
    'private',
    'static',
    'exit',
    'index',
    'inherited',
    'to',
    'else',
    'stdcall',
    'override',
    'shr',
    'asm',
    'far',
    'resourcestring',
    'finalization',
    'packed',
    'virtual',
    'out',
    'and',
    'protected',
    'library',
    'do',
    'xorwrite',
    'goto',
    'near',
    'function',
    'end',
    'div',
    'overload',
    'object',
    'unit',
    'begin',
    'string',
    'on',
    'inline',
    'repeat',
    'until',
    'destructor',
    'write',
    'message',
    'program',
    'with',
    'read',
    'initialization',
    'except',
    'default',
    'nil',
    'if',
    'case',
    'cdecl',
    'in',
    'downto',
    'threadvar',
    'of',
    'try',
    'pascal',
    'const',
    'external',
    'constructor',
    'type',
    'public',
    'then',
    'implementation',
    'finally',
    'published',
    'procedure',
]

string = [RE(r"(#\d+)+")]

number = [RE(r"\b\d+(\.\d+)?")]

title = [RE(r"[a-zA-Z]\w*")]

class _group1:
    default_text = DELIMITER
    word_groups = [('title', title)]

keyword0 = ['function', 'constructor', 'destructor', 'procedure']

class params:
    default_text = DELIMITER
    word_groups = [('keyword', keyword), ('string', string)]
    delimited_ranges = [('string', RE(r"'"), [RE(r"'")])]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag)]

class function:
    default_text = DELIMITER
    word_groups = [('keyword', keyword0), ('title', title)]
    delimited_ranges = [
        ('params', RE(r"\("), [RE(r"\)")], params),
        ('comment', RE(r"//"), [RE(r"$")], comment),
        ('comment', RE(r"\{"), [RE(r"\}")], comment),
        ('comment', RE(r"\(\*"), [RE(r"\*\)")], comment),
    ]

word_groups = [('keyword', keyword), ('string', string), ('number', number)]

delimited_ranges = [
    ('string', RE(r"'"), [RE(r"'")]),
    ('_group1', RE(r"(?=[a-zA-Z]\w*\s*=\s*class\s*\()"), [RE(r"\B|\b")], _group1),
    ('function', RE(r"\b(function|constructor|destructor|procedure)"), [RE(r"[:;]")], function),
    ('comment', RE(r"//"), [RE(r"$")], comment),
    ('comment', RE(r"\{"), [RE(r"\}")], comment),
    ('comment', RE(r"\(\*"), [RE(r"\*\)")], comment),
]
