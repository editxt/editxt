# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: protobuf.js
name = 'Protocol Buffers'
file_patterns = ['*.protobuf']

built_in = """
    double float int32 int64 uint32 uint64 sint32 sint64 fixed32 fixed64
    sfixed32 sfixed64 bool string bytes
    """.split()

keyword = """
    package import option optional required repeated group
    """.split()

literal = ['true', 'false']

number = [RE(r"\b\d+(?:\.\d+)?")]

class string:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': '\\\\[\\s\\S]', 'relevance': 0},
    ]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', doctag),
    ]

keyword0 = ['message', 'enum', 'service']

class title:
    default_text_color = DELIMITER
    rules = [('title', RE(r"[a-zA-Z]\w*"), [RE(r"\B|\b")])]

class class0:
    default_text_color = DELIMITER
    rules = [('keyword', keyword0), ('title', title, [RE(r"\B\b")])]
class0.__name__ = 'class'

class _function:
    default_text_color = DELIMITER
    rules = [('_function', [RE(r";")])]

keyword1 = ['rpc', 'returns']

keyword2 = ['rpc']

class function:
    default_text_color = DELIMITER
    rules = [('keyword', keyword1), ('keyword', keyword2)]

rules = [
    ('built_in', built_in),
    ('keyword', keyword),
    ('literal', literal),
    ('string', RE(r"\""), [RE(r"\"")], string),
    ('number', number),
    ('comment', RE(r"//"), [RE(r"$")], comment),
    ('class', RE(r"\b(?:message|enum|service)"), [RE(r"\{")], class0),
    ('function', RE(r"\b(?:rpc)"), [_function], function),
    ('_group0', RE(r"^\s*[A-Z_]+"), [RE(r"\s*=")]),
]
