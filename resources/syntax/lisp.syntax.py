# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: lisp.js
name = 'Lisp'
file_patterns = ['*.lisp']

number = [
    RE(r"(?:\-|\+)?\d+(?:\.\d+|\/\d+)?(?:(?:d|e|f|l|s|D|E|F|L|S)(?:\+|\-)?\d+)?"),
]

number0 = ('number', number)

number1 = ('number', [RE(r"#(?:b|B)[0-1]+(?:/[0-1]+)?")])

number2 = ('number', [RE(r"#(?:o|O)[0-7]+(?:/[0-7]+)?")])

number3 = ('number', [RE(r"#(?:x|X)[0-9a-fA-F]+(?:/[0-9a-fA-F]+)?")])

number4 = ('number', RE(r"#(?:c|C)\((?:\-|\+)?\d+(?:\.\d+|\/\d+)?(?:(?:d|e|f|l|s|D|E|F|L|S)(?:\+|\-)?\d+)? +(?:\-|\+)?\d+(?:\.\d+|\/\d+)?(?:(?:d|e|f|l|s|D|E|F|L|S)(?:\+|\-)?\d+)?"), [RE(r"\)")])

literal = ('literal', [RE(r"\b(?:t{1}|nil)\b")])

class string:
    default_text_color = DELIMITER
    rules = [('operator.escape', [RE(r"\\[\s\S]")])]

string0 = ('string', RE(r"\""), [RE(r"\"")], string)

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]),
    ]

comment0 = ('comment', RE(r";"), [RE(r"$")], comment)

_group2 = ('_group2', RE(r"\*"), [RE(r"\*")])

symbol = [
    RE(r"[:&][a-zA-Z_\-\+\*\/\<\=\>\&\#][a-zA-Z0-9_\-\+\*\/\<\=\>\&\#!]*"),
]

symbol0 = ('symbol', symbol)

class _group3:
    default_text_color = DELIMITER
    rules = [
        literal,
        string0,
        number0,
        number1,
        number2,
        number3,
        number4,
        # ignore {'begin': '[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*', 'relevance': 0},
    ]

class _group1:
    default_text_color = DELIMITER
    rules = [
        number0,
        number1,
        number2,
        number3,
        number4,
        string0,
        _group2,
        symbol0,
        ('_group3', RE(r"\("), [RE(r"\)")], _group3),
        # ignore {'begin': '[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*', 'relevance': 0},
    ]

_group11 = ('_group1', RE(r"['`]\("), [RE(r"\)")], _group1)

class _group12:
    default_text_color = DELIMITER
    rules = [
        ('name', ['quote']),
        number0,
        number1,
        number2,
        number3,
        number4,
        string0,
        _group2,
        symbol0,
        ('_group3', RE(r"\("), [RE(r"\)")], _group3),
        # ignore {'begin': '[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*', 'relevance': 0},
    ]
_group12.__name__ = '_group1'

_group13 = ('_group1', RE(r"\(quote "), [RE(r"\)")], _group12)

_group14 = ('_group1', RE(r"'\|[\s\S]*?\|"), [RE(r"\B|\b")], _group1)

class _group8:
    default_text_color = DELIMITER
    ends_with_parent = True
    rules = [
        _group11,
        _group13,
        _group14,
        # ignore {'begin': "'[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*"},
        # ignore {'begin': "#'[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*(::[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*)*"},
        None, # _group70,
        literal,
        number0,
        number1,
        number2,
        number3,
        number4,
        string0,
        comment0,
        _group2,
        symbol0,
        # ignore {'begin': '\\|[^]*?\\|'},
        # ignore {'begin': '[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*', 'relevance': 0},
    ]

class _group7:
    default_text_color = DELIMITER
    rules = [
        ('name', [RE(r"[a-zA-Z_\-\+\*\/\<\=\>\&\#][a-zA-Z0-9_\-\+\*\/\<\=\>\&\#!]*")]),
        ('name', [RE(r"\|[\s\S]*?\|")]),
        ('_group8', RE(r"\B|\b"), [RE(r"(?=\))")], _group8),
    ]

_group70 = ('_group7', RE(r"\(\s*"), [RE(r"\)")], _group7)

rules = [
    number0,
    number1,
    number2,
    number3,
    number4,
    ('meta', RE(r"^#!"), [RE(r"$")]),
    literal,
    string0,
    comment0,
    _group11,
    _group13,
    _group14,
    # ignore {'begin': "'[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*"},
    # ignore {'begin': "#'[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*(::[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*)*"},
    _group70,
    # ignore {'begin': '[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*', 'relevance': 0},
]

_group8.rules[3] = _group70
