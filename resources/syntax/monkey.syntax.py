# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: monkey.js
name = 'Monkey'
file_patterns = ['*.monkey']

flags = re.IGNORECASE | re.MULTILINE

built_in = """
    DebugLog DebugStop Error Print ACos ACosr ASin ASinr ATan ATan2
    ATan2r ATanr Abs Abs Ceil Clamp Clamp Cos Cosr Exp Floor Log Max Max
    Min Min Pow Sgn Sgn Sin Sinr Sqrt Tan Tanr Seed PI HALFPI TWOPI
    """.split()

keyword = """
    public private property continue exit extern new try catch eachin
    not abstract final select case default const local global field end
    if then else elseif endif while wend repeat until forever for to
    step next return module inline throw import
    """.split()

literal = ['true', 'false', 'null', 'and', 'or', 'shl', 'shr', 'mod']

built_in0 = [RE(r"\b(?:self|super)\b")]

meta = [RE(r"^\s*strict\b")]

number = [RE(r"[$][a-fA-F0-9]+")]

number0 = [RE(r"\b\d+(?:\.\d+)?")]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', doctag),
    ]

keyword0 = ['function', 'method']

title = [RE(r"[a-zA-Z_]\w*")]

class function:
    default_text_color = DELIMITER
    rules = [('keyword', keyword0), ('title', title)]

keyword1 = ['class', 'interface']

class class0:
    default_text_color = DELIMITER
    rules = [
        ('keyword', keyword1),
        ('_group1', RE(r"\b(?:extends|implements)"), [RE(r"\B\b")]),
        ('title', title),
    ]
class0.__name__ = 'class'

meta_keyword = ['if', 'else', 'elseif', 'endif', 'end', 'then']

class meta0:
    default_text_color = DELIMITER
    rules = [('meta-keyword', meta_keyword)]
meta0.__name__ = 'meta'

keyword2 = ['alias']

class _group0:
    default_text_color = DELIMITER
    rules = [('keyword', keyword2), ('title', title)]

class string:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': '\\\\[\\s\\S]', 'relevance': 0},
    ]

rules = [
    ('built_in', built_in),
    ('keyword', keyword),
    ('literal', literal),
    ('comment', RE(r"#rem"), [RE(r"#end")], comment),
    ('comment', RE(r"'"), [RE(r"$")], comment),
    ('function', RE(r"\b(?:function|method)"), [RE(r"[(?:=:]|$")], function),
    ('class', RE(r"\b(?:class|interface)"), [RE(r"$")], class0),
    ('built_in', built_in0),
    ('meta', RE(r"\s*#"), [RE(r"$")], meta0),
    ('meta', meta),
    ('_group0', RE(r"\b(?:alias)"), [RE(r"=")], _group0),
    ('string', RE(r"\""), [RE(r"\"")], string),
    ('number', number),
    ('number', number0),
]
