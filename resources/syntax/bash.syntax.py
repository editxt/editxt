# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: bash.js
name = 'Bash'
file_patterns = ['*.bash', '*.sh', '*.zsh']

literal = ['true', 'false']

_ = ['-ne', '-eq', '-lt', '-gt', '-f', '-d', '-e', '-s', '-l', '-a']

keyword = [
    'if',
    'then',
    'else',
    'elif',
    'fi',
    'for',
    'while',
    'in',
    'do',
    'done',
    'case',
    'esac',
    'function',
]

built_in = [
    'break',
    'cd',
    'continue',
    'eval',
    'exec',
    'exit',
    'export',
    'getopts',
    'hash',
    'pwd',
    'readonly',
    'return',
    'shift',
    'test',
    'times',
    'trap',
    'umask',
    'unset',
    'alias',
    'bind',
    'builtin',
    'caller',
    'command',
    'declare',
    'echo',
    'enable',
    'help',
    'let',
    'local',
    'logout',
    'mapfile',
    'printf',
    'read',
    'readarray',
    'source',
    'type',
    'typeset',
    'ulimit',
    'unalias',
    'set',
    'shopt',
    'autoload',
    'bg',
    'bindkey',
    'bye',
    'cap',
    'chdir',
    'clone',
    'comparguments',
    'compcall',
    'compctl',
    'compdescribe',
    'compfiles',
    'compgroups',
    'compquote',
    'comptags',
    'comptry',
    'compvalues',
    'dirs',
    'disable',
    'disown',
    'echotc',
    'echoti',
    'emulate',
    'fc',
    'fg',
    'float',
    'functions',
    'getcap',
    'getln',
    'history',
    'integer',
    'jobs',
    'kill',
    'limit',
    'log',
    'noglob',
    'popd',
    'print',
    'pushd',
    'pushln',
    'rehash',
    'sched',
    'setcap',
    'setopt',
    'stat',
    'suspend',
    'ttyctl',
    'unfunction',
    'unhash',
    'unlimit',
    'unsetopt',
    'vared',
    'wait',
    'whence',
    'where',
    'which',
    'zcompile',
    'zformat',
    'zftp',
    'zle',
    'zmodload',
    'zparseopts',
    'zprof',
    'zpty',
    'zregexparse',
    'zsocket',
    'zstyle',
    'ztcp',
]

meta = [RE(r"^#![^\n]+sh\s*$")]

title = [RE(r"\w[\w\d_]*")]

class function:
    default_text = DELIMITER
    word_groups = [('title', title)]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag)]

number = [RE(r"\b\d+(\.\d+)?")]

variable = [RE(r"\$[\w\d#@][\w\d_]*")]

variable0 = [RE(r"\$\{(.*?)}")]

class string:
    default_text = DELIMITER
    word_groups = [('variable', variable), ('variable', variable0)]
    delimited_ranges = [('variable', RE(r"\$\("), [RE(r"\)")])]

word_groups = [
    ('literal', literal),
    ('_', _),
    ('keyword', keyword),
    ('built_in', built_in),
    ('meta', meta),
    ('number', number),
    ('variable', variable),
    ('variable', variable0),
]

delimited_ranges = [
    ('function', RE(r"(?=\w[\w\d_]*\s*\(\s*\)\s*\{)"), [RE(r"\B|\b")], function),
    ('comment', RE(r"#"), [RE(r"$")], comment),
    ('string', RE(r"\""), [RE(r"\"")], string),
    ('string', RE(r"'"), [RE(r"'")]),
]
