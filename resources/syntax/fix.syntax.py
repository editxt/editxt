# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: fix.js
name = 'FIX'
file_patterns = ['*.fix']

flags = re.IGNORECASE | re.MULTILINE

class _group0:
    default_text = DELIMITER
    rules = [
        ('attr', RE(r"([^\u2401\u0001=]+)"), [RE(r"(?==([^\u2401\u0001=]+))")]),
        ('string', RE(r"="), [RE(r"(?=([\u2401\u0001]))")]),
    ]

rules = [
    ('_group0', RE(r"(?=[^\u2401\u0001]+)"), [RE(r"(?=[\u2401\u0001])")], _group0),
]

# TODO merge "word_groups" and "delimited_ranges" into "rules" in editxt.syntax
assert "__obj" not in globals()
assert "__fixup" not in globals()
def __fixup(obj):
    groups = []
    ranges = []
    rules = getattr(obj, "rules", [])
    for i, rng in reversed(list(enumerate(rules))):
        if len(rng) == 2:
            groups.append(rng)
        else:
            assert len(rng) > 2, rng
            ranges.append(rng)
    return groups, ranges

class __obj:
    rules = globals().get("rules", [])
word_groups, delimited_ranges = __fixup(__obj)

for __obj in globals().values():
    if hasattr(__obj, "rules"):
        __obj.word_groups, __obj.delimited_ranges = __fixup(__obj)

del __obj, __fixup
