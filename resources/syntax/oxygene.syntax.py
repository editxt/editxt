# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: oxygene.js
name = 'Oxygene'
file_patterns = ['*.oxygene']

flags = re.IGNORECASE | re.MULTILINE

keyword = """
    abstract add and array as asc aspect assembly async begin break
    block by case class concat const copy constructor continue create
    default delegate desc distinct div do downto dynamic each else empty
    end ensure enum equals event except exit extension external false
    final finalize finalizer finally flags for forward from function
    future global group has if implementation implements implies in
    index inherited inline interface into invariants is iterator join
    locked locking loop matching method mod module namespace nested new
    nil not notify nullable of old on operator or order out override
    parallel params partial pinned private procedure property protected
    public queryable raise read readonly record reintroduce remove
    repeat require result reverse sealed select self sequence set shl
    shr skip static step soft take then to true try tuple type union
    unit unsafe until uses using var virtual raises volatile where while
    with write xor yield await mapped deprecated stdcall cdecl pascal
    register safecall overload library platform reference packed strict
    published autoreleasepool selector strong weak unretained
    """.split()

string = [RE(r"(?:#\d+)+")]

number = [RE(r"\b\d+(?:\.\d+)?")]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', doctag),
    ]

class string0:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': "''"},
    ]
string0.__name__ = 'string'

keyword0 = ['function', 'constructor', 'destructor', 'procedure', 'method']

title = [RE(r"[a-zA-Z]\w*")]

class params:
    default_text_color = DELIMITER
    rules = [
        ('keyword', keyword),
        None,  # rules[4],
        ('string', string),
    ]

class function:
    default_text_color = DELIMITER
    rules = [
        ('keyword', keyword0),
        ('keyword', keyword0),
        ('title', title),
        ('params', RE(r"\("), [RE(r"\)")], params),
        None,  # rules[1],
        None,  # rules[2],
    ]

class class0:
    default_text_color = DELIMITER
    rules = [
        ('keyword', keyword),
        None,  # rules[4],
        ('string', string),
        None,  # rules[1],
        None,  # rules[2],
        None,  # rules[3],
        None,  # rules[7],
    ]
class0.__name__ = 'class'

rules = [
    ('keyword', keyword),
    ('comment', RE(r"{"), [RE(r"}")], comment),
    ('comment', RE(r"\(\*"), [RE(r"\*\)")], comment),
    ('comment', RE(r"//"), [RE(r"$")], comment),
    ('string', RE(r"'"), [RE(r"'")], string0),
    ('string', string),
    ('number', number),
    ('function', RE(r"\b(?:function|constructor|destructor|procedure|method)"), [RE(r"[:;]")], function),
    ('class', RE(r"=\bclass\b"), [RE(r"end;")], class0),
]

params.rules[1] = rules[4]
function.rules[4] = rules[1]
function.rules[5] = rules[2]
class0.rules[1] = rules[4]
class0.rules[3] = rules[1]
class0.rules[4] = rules[2]
class0.rules[5] = rules[3]
class0.rules[6] = rules[7]
