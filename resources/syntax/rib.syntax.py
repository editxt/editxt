# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: rib.js
name = 'RenderMan RIB'
file_patterns = ['*.rib']

keyword = [
    'ArchiveRecord',
    'AreaLightSource',
    'Atmosphere',
    'Attribute',
    'AttributeBegin',
    'AttributeEnd',
    'Basis',
    'Begin',
    'Blobby',
    'Bound',
    'Clipping',
    'ClippingPlane',
    'Color',
    'ColorSamples',
    'ConcatTransform',
    'Cone',
    'CoordinateSystem',
    'CoordSysTransform',
    'CropWindow',
    'Curves',
    'Cylinder',
    'DepthOfField',
    'Detail',
    'DetailRange',
    'Disk',
    'Displacement',
    'Display',
    'End',
    'ErrorHandler',
    'Exposure',
    'Exterior',
    'Format',
    'FrameAspectRatio',
    'FrameBegin',
    'FrameEnd',
    'GeneralPolygon',
    'GeometricApproximation',
    'Geometry',
    'Hider',
    'Hyperboloid',
    'Identity',
    'Illuminate',
    'Imager',
    'Interior',
    'LightSource',
    'MakeCubeFaceEnvironment',
    'MakeLatLongEnvironment',
    'MakeShadow',
    'MakeTexture',
    'Matte',
    'MotionBegin',
    'MotionEnd',
    'NuPatch',
    'ObjectBegin',
    'ObjectEnd',
    'ObjectInstance',
    'Opacity',
    'Option',
    'Orientation',
    'Paraboloid',
    'Patch',
    'PatchMesh',
    'Perspective',
    'PixelFilter',
    'PixelSamples',
    'PixelVariance',
    'Points',
    'PointsGeneralPolygons',
    'PointsPolygons',
    'Polygon',
    'Procedural',
    'Projection',
    'Quantize',
    'ReadArchive',
    'RelativeDetail',
    'ReverseOrientation',
    'Rotate',
    'Scale',
    'ScreenWindow',
    'ShadingInterpolation',
    'ShadingRate',
    'Shutter',
    'Sides',
    'Skew',
    'SolidBegin',
    'SolidEnd',
    'Sphere',
    'SubdivisionMesh',
    'Surface',
    'TextureCoordinates',
    'Torus',
    'Transform',
    'TransformBegin',
    'TransformEnd',
    'TransformPoints',
    'Translate',
    'TrimCurve',
    'WorldBegin',
    'WorldEnd',
]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag)]

number = [RE(r"(\b0[xX][a-fA-F0-9]+|(\b\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?)")]

word_groups = [('keyword', keyword), ('number', number)]

delimited_ranges = [
    ('comment', RE(r"#"), [RE(r"$")], comment),
    ('string', RE(r"'"), [RE(r"'")]),
    ('string', RE(r"\""), [RE(r"\"")]),
]
