# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: yaml.js
name = 'YAML'
file_patterns = ['*.yaml', '*.yml', '*.YAML', '*.yaml']

flags = re.IGNORECASE | re.MULTILINE

literal = """
    { } true false yes no Yes No True False null
    """.split()

class string:
    default_text_color = DELIMITER
    rules = [
        ('operator.escape', [RE(r"\\[\s\S]")]),
        ('template-variable', RE(r"{{"), [RE(r"}}")]),
        ('template-variable', RE(r"%{"), [RE(r"}")]),
    ]

class string1:
    default_text_color = DELIMITER
    rules = []
string1.__name__ = 'string'

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]),
    ]

number = [
    RE(r"(?:\b0[xX][a-fA-F0-9]+|(?:\b\d+(?:\.\d*)?|\.\d+)(?:[eE][-+]?\d+)?)"),
]

rules = [
    ('literal', literal),
    ('attr', [RE(r"^[ \-]*[a-zA-Z_][\w\-]*:")]),
    ('attr', [RE(r"^[ \-]*\"[a-zA-Z_][\w\-]*\":")]),
    ('attr', [RE(r"^[ \-]*'[a-zA-Z_][\w\-]*':")]),
    ('meta', [RE(r"^---s*$")]),
    ('string', RE(r"[\|>] *$"), [RE(r"(?=^[ \-]*[a-zA-Z_][\w\-]*:)")], string),
    ('_group0', RE(r"<%[%=-]?"), [RE(r"[%-]?%>")], 'ruby'),
    ('type', [RE(r"!![a-zA-Z_]\w*")]),
    ('meta', [RE(r"&[a-zA-Z_]\w*$")]),
    ('meta', [RE(r"\*[a-zA-Z_]\w*$")]),
    ('bullet', [RE(r"^ *-")]),
    ('string', RE(r"'"), [RE(r"'")], string1),
    ('string', RE(r"\""), [RE(r"\"")], string1),
    ('comment', RE(r"#"), [RE(r"$")], comment),
    ('number', number),
]

string1.rules.extend(string.rules)
