# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: java.js
name = 'Java'
file_patterns = ['*.java', '*.jsp']

keyword = [
    'false',
    'synchronized',
    'int',
    'abstract',
    'float',
    'private',
    'char',
    'boolean',
    'static',
    'null',
    'if',
    'const',
    'for',
    'true',
    'while',
    'long',
    'strictfp',
    'finally',
    'protected',
    'import',
    'native',
    'final',
    'void',
    'enum',
    'else',
    'break',
    'transient',
    'catch',
    'instanceof',
    'byte',
    'super',
    'volatile',
    'case',
    'assert',
    'short',
    'package',
    'default',
    'double',
    'public',
    'try',
    'this',
    'switch',
    'continue',
    'throws',
    'protected',
    'public',
    'private',
]

doctag = [RE(r"@[A-Za-z]+")]

doctag0 = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag), ('doctag', doctag0)]

class comment0:
    default_text = DELIMITER
    word_groups = [('doctag', doctag0)]
comment0.__name__ = 'comment'

keyword0 = ['class', 'interface']

title = [RE(r"[a-zA-Z_]\w*")]

class class0:
    default_text = DELIMITER
    word_groups = [('keyword', keyword0), ('title', title)]
    delimited_ranges = [('_group6', RE(r"\b(extends|implements)"), [RE(r"\B|\b")])]
class0.__name__ = 'class'

class _group8:
    default_text = DELIMITER
    word_groups = [('title', title)]

number = [RE(r"(\b0[xX][a-fA-F0-9]+|(\b\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?)")]

class params:
    default_text = DELIMITER
    word_groups = [('keyword', keyword), ('number', number)]
    delimited_ranges = [
        ('string', RE(r"'"), [RE(r"'")]),
        ('string', RE(r"\""), [RE(r"\"")]),
        ('comment', RE(r"/\*"), [RE(r"\*/")], comment0),
    ]

class function:
    default_text = DELIMITER
    word_groups = [('keyword', keyword)]
    delimited_ranges = [
        ('_group8', RE(r"(?=[a-zA-Z_]\w*\s*\()"), [RE(r"\B|\b")], _group8),
        ('params', RE(r"\("), [RE(r"\)")], params),
        ('comment', RE(r"//"), [RE(r"$")], comment0),
        ('comment', RE(r"/\*"), [RE(r"\*/")], comment0),
    ]

number0 = [
    RE(r"\b(0[bB]([01]+[01_]+[01]+|[01]+)|0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)|(([\d]+[\d_]+[\d]+|[\d]+)(\.([\d]+[\d_]+[\d]+|[\d]+))?|\.([\d]+[\d_]+[\d]+|[\d]+))([eE][-+]?\d+)?)[lLfF]?"),
]

word_groups = [('keyword', keyword), ('number', number0), ('meta', doctag)]

delimited_ranges = [
    ('comment', RE(r"/\*\*"), [RE(r"\*/")], comment),
    ('comment', RE(r"//"), [RE(r"$")], comment0),
    ('comment', RE(r"/\*"), [RE(r"\*/")], comment0),
    ('string', RE(r"'"), [RE(r"'")]),
    ('string', RE(r"\""), [RE(r"\"")]),
    ('class', RE(r"\b(class|interface)"), [RE(r"(?=[{;=])")], class0),
    ('_group7', RE(r"\b(new|throw|return|else)"), [RE(r"\B|\b")]),
    ('function', RE(r"(?=([a-zA-Z_]\w*(<[a-zA-Z_]\w*>)?\s+)+[a-zA-Z_]\w*\s*\()"), [RE(r"(?=[{;=])")], function),
]
