# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: dockerfile.js
name = 'Dockerfile'
file_patterns = ['*.dockerfile', '*.docker']

flags = re.IGNORECASE | re.MULTILINE

keyword = [
    'from',
    'maintainer',
    'cmd',
    'expose',
    'add',
    'copy',
    'entrypoint',
    'volume',
    'user',
    'workdir',
    'onbuild',
    'run',
    'env',
    'label',
]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag)]

keyword0 = [
    'run',
    'cmd',
    'entrypoint',
    'volume',
    'add',
    'copy',
    'workdir',
    'onbuild',
    'label',
]

class _group1:
    default_text = DELIMITER
    word_groups = [('keyword', keyword0)]

class _group10:
    default_text = DELIMITER
    delimited_ranges = [
        ('_group1', RE(r"^ *(onbuild +)?(run|cmd|entrypoint|volume|add|copy|workdir|label) +"), [RE(r"\B|\b")], _group1),
    ]
_group10.__name__ = '_group1'

class _group2:
    default_text = DELIMITER

keyword1 = ['from', 'maintainer', 'expose', 'env', 'user', 'onbuild']

number = [RE(r"\b\d+(\.\d+)?")]

class _group3:
    default_text = DELIMITER
    word_groups = [('keyword', keyword1), ('number', number)]
    delimited_ranges = [
        ('string', RE(r"'"), [RE(r"'")]),
        ('string', RE(r"\""), [RE(r"\"")]),
        ('comment', RE(r"#"), [RE(r"$")], comment),
    ]

word_groups = [('keyword', keyword)]

delimited_ranges = [
    ('comment', RE(r"#"), [RE(r"$")], comment),
    ('_group1', _group10, [RE(r"(?=\B|\b)")], _group2),
    ('_group3', RE(r"^ *(onbuild +)?(from|maintainer|expose|env|user|onbuild) +"), [RE(r"[^\\]\n")], _group3),
]
