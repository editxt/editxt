# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: openscad.js
name = 'OpenSCAD'
file_patterns = ['*.openscad', '*.scad']

literal = ['false', 'true', 'PI', 'undef']

keyword = [
    'function',
    'module',
    'include',
    'use',
    'for',
    'intersection_for',
    'if',
    'else',
    '\\%',
]

built_in = [
    'circle',
    'square',
    'polygon',
    'text',
    'sphere',
    'cube',
    'cylinder',
    'polyhedron',
    'translate',
    'rotate',
    'scale',
    'resize',
    'mirror',
    'multmatrix',
    'color',
    'offset',
    'hull',
    'minkowski',
    'union',
    'difference',
    'intersection',
    'abs',
    'sign',
    'sin',
    'cos',
    'tan',
    'acos',
    'asin',
    'atan',
    'atan2',
    'floor',
    'round',
    'ceil',
    'ln',
    'log',
    'pow',
    'sqrt',
    'exp',
    'rands',
    'min',
    'max',
    'concat',
    'lookup',
    'str',
    'chr',
    'search',
    'version',
    'version_num',
    'norm',
    'cross',
    'parent_module',
    'echo',
    'import',
    'import_dxf',
    'dxf_linear_extrude',
    'linear_extrude',
    'rotate_extrude',
    'surface',
    'projection',
    'render',
    'children',
    'dxf_cross',
    'dxf_dim',
    'let',
    'assign',
]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag)]

number = [RE(r"\b\d+(\.\d+)?(e-?\d+)?")]

keyword0 = ['include', 'use']

class meta:
    default_text = DELIMITER
    word_groups = [('keyword', keyword0)]

keyword1 = [RE(r"\$(f[asn]|t|vp[rtd]|children)")]

keyword2 = ['module', 'function']

literal0 = [RE(r"false|true|PI|undef")]

class params:
    default_text = DELIMITER
    word_groups = [('number', number), ('keyword', keyword1), ('literal', literal0)]
    delimited_ranges = [('string', RE(r"\""), [RE(r"\"")])]

title = [RE(r"[a-zA-Z_]\w*")]

class function:
    default_text = DELIMITER
    word_groups = [('keyword', keyword2), ('title', title)]
    delimited_ranges = [('params', RE(r"\("), [RE(r"\)")], params)]

word_groups = [
    ('literal', literal),
    ('keyword', keyword),
    ('built_in', built_in),
    ('number', number),
    ('keyword', keyword1),
]

delimited_ranges = [
    ('comment', RE(r"//"), [RE(r"$")], comment),
    ('comment', RE(r"/\*"), [RE(r"\*/")], comment),
    ('meta', RE(r"include|use <"), [RE(r">")], meta),
    ('string', RE(r"\""), [RE(r"\"")]),
    ('function', RE(r"\b(module|function)"), [RE(r"\=|\{")], function),
]
