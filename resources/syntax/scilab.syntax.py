# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: scilab.js
name = 'Scilab'
file_patterns = ['*.scilab', '*.sci']

literal = [
    '%f',
    '%F',
    '%t',
    '%T',
    '%pi',
    '%eps',
    '%inf',
    '%nan',
    '%e',
    '%i',
    '%z',
    '%s',
]

keyword = [
    'abort',
    'break',
    'case',
    'clear',
    'catch',
    'continue',
    'do',
    'elseif',
    'else',
    'endfunction',
    'end',
    'for',
    'function',
    'global',
    'if',
    'pause',
    'return',
    'resume',
    'select',
    'try',
    'then',
    'while',
]

built_in = [
    'abs',
    'and',
    'acos',
    'asin',
    'atan',
    'ceil',
    'cd',
    'chdir',
    'clearglobal',
    'cosh',
    'cos',
    'cumprod',
    'deff',
    'disp',
    'error',
    'exec',
    'execstr',
    'exists',
    'exp',
    'eye',
    'gettext',
    'floor',
    'fprintf',
    'fread',
    'fsolve',
    'imag',
    'isdef',
    'isempty',
    'isinfisnan',
    'isvector',
    'lasterror',
    'length',
    'load',
    'linspace',
    'list',
    'listfiles',
    'log10',
    'log2',
    'log',
    'max',
    'min',
    'msprintf',
    'mclose',
    'mopen',
    'ones',
    'or',
    'pathconvert',
    'poly',
    'printf',
    'prod',
    'pwd',
    'rand',
    'real',
    'round',
    'sinh',
    'sin',
    'size',
    'gsort',
    'sprintf',
    'sqrt',
    'strcat',
    'strcmps',
    'tring',
    'sum',
    'system',
    'tanh',
    'tan',
    'type',
    'typename',
    'warning',
    'zeros',
    'matrix',
]

keyword0 = ['function']

title = [RE(r"[a-zA-Z_]\w*")]

class function:
    default_text = DELIMITER
    word_groups = [('keyword', keyword0), ('title', title)]
    delimited_ranges = [('params', RE(r"\("), [RE(r"\)")])]

number = [RE(r"(\b0[xX][a-fA-F0-9]+|(\b\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?)")]

class _group1:
    default_text = DELIMITER
    word_groups = [('number', number)]
    delimited_ranges = [('string', RE(r"'|\""), [RE(r"'|\"")])]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag)]

word_groups = [
    ('literal', literal),
    ('keyword', keyword),
    ('built_in', built_in),
    ('number', number),
]

delimited_ranges = [
    ('function', RE(r"\b(function)"), [RE(r"$")], function),
    ('_group0', RE(r"[a-zA-Z_][a-zA-Z_0-9]*('+[\.']*|[\.']+)"), [RE(r"\B|\b")]),
    ('_group1', RE(r"\["), [RE(r"\]'*[\.']*")], _group1),
    ('comment', RE(r"//"), [RE(r"$")], comment),
    ('string', RE(r"'|\""), [RE(r"'|\"")]),
]
