# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: inform7.js
name = 'Inform 7'
file_patterns = ['*.inform7', '*.i7']

flags = re.IGNORECASE | re.MULTILINE

keyword = [
    'thing',
    'room',
    'person',
    'man',
    'woman',
    'animal',
    'container',
    'supporter',
    'backdrop',
    'door',
    'scenery',
    'open',
    'closed',
    'locked',
    'inside',
    'gender',
    'is',
    'are',
    'say',
    'understand',
    'kind',
    'of',
    'rule',
]

class string:
    default_text = DELIMITER
    rules = [('subst', RE(r"\["), [RE(r"\]")])]

class _group0:
    default_text = DELIMITER
    rules = [('_group1', RE(r"\(This"), [RE(r"\)")])]

class comment:
    default_text = DELIMITER
    rules = []

rules = [
    ('keyword', keyword),
    ('string', RE(r"\""), [RE(r"\"")], string),
    ('section', RE(r"^(Volume|Book|Part|Chapter|Section|Table)\b"), [RE(r"$")]),
    ('_group0', RE(r"^(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)\b"), [RE(r":")], _group0),
    ('comment', RE(r"\["), [RE(r"\]")], comment),
]

# TODO merge "word_groups" and "delimited_ranges" into "rules" in editxt.syntax
assert "__obj" not in globals()
assert "__fixup" not in globals()
def __fixup(obj):
    groups = []
    ranges = []
    rules = getattr(obj, "rules", [])
    for i, rng in reversed(list(enumerate(rules))):
        if len(rng) == 2:
            groups.append(rng)
        else:
            assert len(rng) > 2, rng
            ranges.append(rng)
    return groups, ranges

class __obj:
    rules = globals().get("rules", [])
word_groups, delimited_ranges = __fixup(__obj)

for __obj in globals().values():
    if hasattr(__obj, "rules"):
        __obj.word_groups, __obj.delimited_ranges = __fixup(__obj)

del __obj, __fixup
