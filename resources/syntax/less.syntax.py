# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: less.js
name = 'Less'
file_patterns = ['*.less']

flags = re.IGNORECASE | re.MULTILINE

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]),
    ]

comment0 = ('comment', RE(r"//"), [RE(r"$")], comment)

comment1 = ('comment', RE(r"/\*"), [RE(r"\*/")], comment)

class keyword0:
    default_text_color = DELIMITER
    rules = [
        ('keyword', RE(r"@(?:import|media|charset|font-face|(?:-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\b"), [RE(r"\B|\b")]),
    ]
keyword0.__name__ = 'keyword'

string = ('string', [RE(r"~?'.*?'")])

string0 = ('string', [RE(r"~?\".*?\"")])

number = [
    RE(r"\b\d+(?:\.\d+)?(?:%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?"),
]

number0 = ('number', number)

class _group20:
    default_text_color = DELIMITER
    rules = [('_group2', RE(r"(?:url|data-uri)\("), [RE(r"\B|\b")])]
_group20.__name__ = '_group2'

class _string0:
    default_text_color = DELIMITER
    rules = [('_string', [RE(r"[\)\n]")])]
_string0.__name__ = '_string'

_group21 = ('_group2', _group20, [_string0])

number1 = ('number', [RE(r"#[0-9A-Fa-f]+\b")])

class _group3:
    default_text_color = DELIMITER
    rules = []

_group30 = ('_group3', RE(r"\("), [RE(r"\)")], _group3)

variable = ('variable', [RE(r"@@?[\w-]+")])

variable0 = ('variable', [RE(r"@{[\w-]+}")])

built_in = ('built_in', [RE(r"~?`[^`]*?`")])

class _attribute0:
    default_text_color = DELIMITER
    rules = [('_attribute', [RE(r":")])]
_attribute0.__name__ = '_attribute'

attribute = ('attribute', RE(r"(?=[\w-]+\s*:)"), [_attribute0])

meta = ('meta', [RE(r"!important")])

class _group1:
    default_text_color = DELIMITER
    rules = [
        comment0,
        comment1,
        string,
        string0,
        number0,
        _group21,
        number1,
        _group30,
        variable,
        variable0,
        built_in,
        attribute,
        meta,
    ]

class variable2:
    default_text_color = DELIMITER
    rules = [('variable', RE(r"@[\w-]+\s*:"), [RE(r"\B|\b")])]
variable2.__name__ = 'variable'

class _group5:
    default_text_color = DELIMITER
    rules = []

class _group4:
    default_text_color = DELIMITER
    rules = [
        comment0,
        comment1,
        string,
        string0,
        number0,
        _group21,
        number1,
        _group30,
        variable,
        variable0,
        built_in,
        attribute,
        meta,
        ('_group5', RE(r"{"), [RE(r"}")], _group5),
    ]

class variable5:
    default_text_color = DELIMITER
    rules = [('variable', RE(r"@[\w-]+"), [RE(r"\B|\b")])]
variable5.__name__ = 'variable'

class _group7:
    default_text_color = DELIMITER
    ends_with_parent = True
    rules = [
        ('keyword', ['when']),
        ('_group8', RE(r"\b(?:and|not)"), [RE(r"(?=\B|\b)")]),
        comment0,
        comment1,
        string,
        string0,
        number0,
        _group21,
        number1,
        _group30,
        variable,
        variable0,
        built_in,
        attribute,
        meta,
    ]

class _group9:
    default_text_color = DELIMITER
    rules = []

class _group6:
    default_text_color = DELIMITER
    rules = [
        comment0,
        comment1,
        ('_group7', RE(r"\b(?:when)"), [RE(r"(?=\B|\b)")], _group7),
        ('keyword', [RE(r"all\b")]),
        variable0,
        ('selector-tag', [RE(r"(?:[\w-]+|@{[\w-]+})%?")]),
        ('selector-id', [RE(r"#(?:[\w-]+|@{[\w-]+})")]),
        ('selector-class', [RE(r"\.(?:[\w-]+|@{[\w-]+})")]),
        ('selector-tag', [RE(r"&")]),
        ('selector-attr', RE(r"\["), [RE(r"\]")]),
        ('_group9', RE(r"\("), [RE(r"\)")], _group9),
        # ignore {'begin': '!important'},
    ]

class _group71:
    default_text_color = DELIMITER
    ends_with_parent = True
    rules = [
        ('keyword', ['when']),
        ('_group8', RE(r"\b(?:and|not)"), [RE(r"(?=[;{}])")]),
        comment0,
        comment1,
        string,
        string0,
        number0,
        _group21,
        number1,
        _group30,
        variable,
        variable0,
        built_in,
        attribute,
        meta,
    ]
_group71.__name__ = '_group7'

class _group61:
    default_text_color = DELIMITER
    rules = [
        comment0,
        comment1,
        ('_group7', RE(r"\b(?:when)"), [RE(r"(?=[;{}])")], _group71),
        ('keyword', [RE(r"all\b")]),
        variable0,
        ('selector-tag', [RE(r"(?:[\w-]+|@{[\w-]+})%?")]),
        ('selector-id', [RE(r"#(?:[\w-]+|@{[\w-]+})")]),
        ('selector-class', [RE(r"\.(?:[\w-]+|@{[\w-]+})")]),
        ('selector-tag', [RE(r"&")]),
        ('selector-attr', RE(r"\["), [RE(r"\]")]),
        ('_group9', RE(r"\("), [RE(r"\)")], _group9),
        # ignore {'begin': '!important'},
    ]
_group61.__name__ = '_group6'

class _group73:
    default_text_color = DELIMITER
    ends_with_parent = True
    rules = [
        ('keyword', ['when']),
        ('_group8', RE(r"\b(?:and|not)"), [RE(r"(?={)")]),
        comment0,
        comment1,
        string,
        string0,
        number0,
        _group21,
        number1,
        _group30,
        variable,
        variable0,
        built_in,
        attribute,
        meta,
    ]
_group73.__name__ = '_group7'

class _group63:
    default_text_color = DELIMITER
    rules = [
        comment0,
        comment1,
        ('_group7', RE(r"\b(?:when)"), [RE(r"(?={)")], _group73),
        ('keyword', [RE(r"all\b")]),
        variable0,
        ('selector-tag', [RE(r"(?:[\w-]+|@{[\w-]+})%?")]),
        ('selector-id', [RE(r"#(?:[\w-]+|@{[\w-]+})")]),
        ('selector-class', [RE(r"\.(?:[\w-]+|@{[\w-]+})")]),
        ('selector-tag', [RE(r"&")]),
        ('selector-attr', RE(r"\["), [RE(r"\]")]),
        ('_group9', RE(r"\("), [RE(r"\)")], _group9),
        # ignore {'begin': '!important'},
    ]
_group63.__name__ = '_group6'

class attribute0:
    default_text_color = DELIMITER
    rules = [comment0, comment1]
attribute0.__name__ = 'attribute'

class attribute2:
    default_text_color = DELIMITER
    rules = [
        ('attribute', RE(r"(?:[\w-]+|@{[\w-]+})"), [_attribute0], attribute0),
    ]
attribute2.__name__ = 'attribute'

class _group11:
    default_text_color = DELIMITER
    rules = []

rules = [
    comment0,
    comment1,
    ('keyword', keyword0, [RE(r"(?=[;{}])")], _group1),
    ('variable', variable2, [RE(r"(?=[;}])")], _group4),
    ('variable', variable5, [RE(r"(?=[;}])")], _group4),
    ('_group6', RE(r"(?=[\.#:&\[])"), [RE(r"(?=[;{}])")], _group61),
    ('_group6', RE(r"(?=(?:[\w-]+|@{[\w-]+})[^;]*{)"), [RE(r"(?={)")], _group63),
    ('attribute', attribute2, [RE(r"(?=[;}])")], _group11),
]

_group3.rules.extend(_group1.rules)
_group5.rules.extend(rules)
_group9.rules.extend(_group4.rules)
_group11.rules.extend(_group1.rules)
