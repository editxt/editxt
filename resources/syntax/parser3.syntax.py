# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: parser3.js
name = 'Parser3'
file_patterns = ['*.parser3']

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    rules = [
        # {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', doctag),
    ]

class comment0:
    default_text = DELIMITER
    rules = [
        ('comment', RE(r"{"), [RE(r"}")], comment),
        # {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', doctag),
    ]
comment0.__name__ = 'comment'

meta = [RE(r"^@(?:BASE|USE|CLASS|OPTIONS)$")]

title = [RE(r"@[\w\-]+\[[\w^;\-]*\](?:\[[\w^;\-]*\])?(?:.*)$")]

variable = [RE(r"\$\{?[\w\-\.\:]+\}?")]

keyword = [RE(r"\^[\w\-\.\:]+")]

number = [RE(r"\^#[0-9a-fA-F]+")]

number0 = [
    RE(r"(?:\b0[xX][a-fA-F0-9]+|(?:\b\d+(?:\.\d*)?|\.\d+)(?:[eE][-+]?\d+)?)"),
]

rules = [
    ('comment', RE(r"^#"), [RE(r"$")], comment),
    ('comment', RE(r"\^rem{"), [RE(r"}")], comment0),
    ('meta', meta),
    ('title', title),
    ('variable', variable),
    ('keyword', keyword),
    ('number', number),
    ('number', number0),
]

# TODO merge "word_groups" and "delimited_ranges" into "rules" in editxt.syntax
assert "__obj" not in globals()
assert "__fixup" not in globals()
def __fixup(obj):
    groups = []
    ranges = []
    rules = getattr(obj, "rules", [])
    for i, rng in reversed(list(enumerate(rules))):
        if len(rng) == 2:
            groups.append(rng)
        else:
            assert len(rng) > 2, rng
            ranges.append(rng)
    return groups, ranges

class __obj:
    rules = globals().get("rules", [])
word_groups, delimited_ranges = __fixup(__obj)

for __obj in globals().values():
    if hasattr(__obj, "rules"):
        __obj.word_groups, __obj.delimited_ranges = __fixup(__obj)

del __obj, __fixup
