# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: sml.js
name = 'SML'
file_patterns = ['*.sml', '*.ml']

literal = ['true', 'false', 'NONE', 'SOME', 'LESS', 'EQUAL', 'GREATER', 'nil']

keyword = [
    'abstype',
    'and',
    'andalso',
    'as',
    'case',
    'datatype',
    'do',
    'else',
    'end',
    'eqtype',
    'exception',
    'fn',
    'fun',
    'functor',
    'handle',
    'if',
    'in',
    'include',
    'infix',
    'infixr',
    'let',
    'local',
    'nonfix',
    'of',
    'op',
    'open',
    'orelse',
    'raise',
    'rec',
    'sharing',
    'sig',
    'signature',
    'struct',
    'structure',
    'then',
    'type',
    'val',
    'with',
    'withtype',
    'where',
    'while',
]

built_in = [
    'array',
    'bool',
    'char',
    'exn',
    'int',
    'list',
    'option',
    'order',
    'real',
    'ref',
    'string',
    'substring',
    'vector',
    'unit',
    'word',
]

literal0 = [RE(r"\[(\|\|)?\]|\(\)")]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag)]

symbol = [RE(r"'[A-Za-z_](?!')[\w']*")]

type = [RE(r"`[A-Z][\w']*")]

type0 = [RE(r"\b[A-Z][\w']*")]

number = [
    RE(r"\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)"),
]

word_groups = [
    ('literal', literal),
    ('keyword', keyword),
    ('built_in', built_in),
    ('literal', literal0),
    ('symbol', symbol),
    ('type', type),
    ('type', type0),
    ('number', number),
]

delimited_ranges = [
    ('comment', RE(r"\(\*"), [RE(r"\*\)")], comment),
    ('string', RE(r"'"), [RE(r"'")]),
    ('string', RE(r"\""), [RE(r"\"")]),
]
