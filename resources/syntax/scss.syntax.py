# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: scss.js
name = 'SCSS'
file_patterns = ['*.scss']

flags = re.IGNORECASE | re.MULTILINE

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    word_groups = [('doctag', doctag)]

selector_id = [RE(r"\#[A-Za-z0-9_-]+")]

selector_class = [RE(r"\.[A-Za-z0-9_-]+")]

selector_tag = [
    RE(r"\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b"),
]

variable = [RE(r"(\$[a-zA-Z-][a-zA-Z0-9_-]*)\b")]

attribute = [
    RE(r"\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\b"),
]

number = [RE(r"#[0-9A-Fa-f]+")]

number0 = [
    RE(r"\b\d+(\.\d+)?(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?"),
]

meta = [RE(r"!important")]

class _group5:
    default_text = DELIMITER
    word_groups = [
        ('variable', variable),
        ('number', number),
        ('number', number0),
        ('meta', meta),
    ]
    delimited_ranges = [
        ('string', RE(r"\""), [RE(r"\"")]),
        ('string', RE(r"'"), [RE(r"'")]),
    ]

keyword = [
    'mixin',
    'include',
    'extend',
    'for',
    'if',
    'else',
    'each',
    'while',
    'charset',
    'import',
    'debug',
    'media',
    'page',
    'content',
    'font-face',
    'namespace',
    'warn',
]

class _group8:
    default_text = DELIMITER
    word_groups = [
        ('keyword', keyword),
        ('variable', variable),
        ('number', number),
        ('number', number0),
    ]
    delimited_ranges = [
        ('string', RE(r"\""), [RE(r"\"")]),
        ('string', RE(r"'"), [RE(r"'")]),
    ]

word_groups = [
    ('selector-id', selector_id),
    ('selector-class', selector_class),
    ('selector-tag', selector_tag),
    ('variable', variable),
    ('attribute', attribute),
]

delimited_ranges = [
    ('comment', RE(r"//"), [RE(r"$")], comment),
    ('comment', RE(r"/\*"), [RE(r"\*/")], comment),
    ('selector-attr', RE(r"\["), [RE(r"\]")]),
    ('_group5', RE(r":"), [RE(r";")], _group5),
    ('_group8', RE(r"@"), [RE(r"[{;]")], _group8),
]
