# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: xml.js
name = 'HTML, XML'
file_patterns = ['*.xml', '*.html', '*.xhtml', '*.rss', '*.atom', '*.xsl', '*.plist']

flags = re.IGNORECASE | re.MULTILINE

#class meta:
#    default_text_color = DELIMITER
#    rules = [('_group0', RE(r"\["), [RE(r"\]")])]

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]),
    ]

_group4 = ('_group4', RE(r"<\?(?:php)?(?!\w)"), [RE(r"\?>")], 'php')

class string:
    default_text_color = DELIMITER
    rules = [_group4]

class _group5:
    default_text_color = DELIMITER
    rules = [
        ('string', RE(r"\""), [RE(r"\"")], string),
        ('string', RE(r"'"), [RE(r"'")], string),
        ('string', RE(r"[^\s\/>]+"), [RE(r"(?=>)")], string),
    ]

class _group3:
    default_text_color = DELIMITER
    ends_with_parent = True
    rules = [
        _group4,
        ('attr', [RE(r"[A-Za-z0-9\._:-]+")]),
        ('_group5', RE(r"="), [RE(r"(?=>)")], _group5),
    ]

_group30 = ('_group3', RE(r"\B|\b"), [RE(r"(?=>)")], _group3)

class tag:
    default_text_color = DELIMITER
    rules = [('name', ['style']), _group30]

class tag1:
    default_text_color = DELIMITER
    rules = [('tag', RE(r"<style(?=\s|>|$)"), [RE(r">")], tag)]
tag1.__name__ = 'tag'

class tag3:
    default_text_color = DELIMITER
    rules = [('name', ['script']), _group30]
tag3.__name__ = 'tag'

class tag5:
    default_text_color = DELIMITER
    rules = [('tag', RE(r"<script(?=\s|>|$)"), [RE(r">")], tag3)]
tag5.__name__ = 'tag'

class tag7:
    default_text_color = DELIMITER
    rules = [('name', [RE(r"[^\/><\s]+")]), _group30]
tag7.__name__ = 'tag'

rules = [
    ('meta', RE(r"<!DOCTYPE"), [RE(r">")]), #, meta),
    ('comment', RE(r"<!--"), [RE(r"-->")], comment),
    ('_group2', RE(r"<\!\[CDATA\["), [RE(r"\]\]>")]),
    ('tag', tag1, [RE(r"(?=</style>)")], 'css'),
    ('tag', tag5, [RE(r"(?=</script>)")], 'javascript'),
    _group4,
    ('meta', RE(r"<\?\w+"), [RE(r"\?>")]),
    ('tag', RE(r"</?"), [RE(r"/?>")], tag7),
]
