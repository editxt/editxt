# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: xml.js
name = 'HTML, XML'
file_patterns = ['*.xml', '*.html', '*.xhtml', '*.rss', '*.atom', '*.xsl', '*.plist']

flags = re.IGNORECASE | re.MULTILINE

class meta:
    default_text_color = DELIMITER
    rules = [('_group0', RE(r"\["), [RE(r"\]")])]

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text_color = DELIMITER
    rules = [
        # ignore {'begin': {'pattern': "\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b", 'type': 'RegExp'}},
        ('doctag', doctag),
    ]

name0 = ['style']

attr = [RE(r"[A-Za-z0-9\._:-]+")]

class string:
    default_text_color = DELIMITER
    rules = [
        None,  # _group2.rules[0],
    ]

class _group4:
    default_text_color = DELIMITER
    rules = [
        ('string', RE(r"\""), [RE(r"\"")], string),
        ('string', RE(r"'"), [RE(r"'")], string),
        ('string', RE(r"[^\s\/>]+"), [RE(r"\B\b")], string),
    ]

class _group2:
    default_text_color = DELIMITER
    rules = [
        ('_group3', RE(r"<\?(?:php)?(?!\w)"), [RE(r"\?>")], 'php'),
        ('attr', attr),
        ('_group4', RE(r"="), [RE(r"\B\b")], _group4),
    ]

class tag:
    default_text_color = DELIMITER
    rules = [
        ('name', name0),
        ('_group2', RE(r"\B|\b"), [RE(r"\B\b")], _group2),
    ]

class tag0:
    default_text_color = DELIMITER
    rules = [('tag', RE(r"<style(?=\s|>|$)"), [RE(r">")], tag)]
tag0.__name__ = 'tag'

name1 = ['script']

class tag1:
    default_text_color = DELIMITER
    rules = [('name', name1), tag.rules[1]]
tag1.__name__ = 'tag'

class tag2:
    default_text_color = DELIMITER
    rules = [('tag', RE(r"<script(?=\s|>|$)"), [RE(r">")], tag1)]
tag2.__name__ = 'tag'

name2 = [RE(r"[^\/><\s]+")]

class tag3:
    default_text_color = DELIMITER
    rules = [('name', name2), tag.rules[1]]
tag3.__name__ = 'tag'

rules = [
    ('meta', RE(r"<!DOCTYPE"), [RE(r">")], meta),
    ('comment', RE(r"<!--"), [RE(r"-->")], comment),
    ('_group1', RE(r"<\!\[CDATA\["), [RE(r"\]\]>")]),
    ('tag', tag0, [RE(r"(?=</style>)")], 'css'),
    ('tag', tag2, [RE(r"(?=</script>)")], 'javascript'),
    _group2.rules[0],
    ('meta', RE(r"<\?\w+"), [RE(r"\?>")]),
    ('tag', RE(r"</?"), [RE(r"/?>")], tag3),
]

string.rules[0] = _group2.rules[0]
