# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: apache.js
name = 'Apache'
file_patterns = ['*.apache', '*.apacheconf']

flags = re.IGNORECASE | re.MULTILINE

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    rules = [('doctag', doctag)]

nomarkup = [
    'order',
    'deny',
    'allow',
    'setenv',
    'rewriterule',
    'rewriteengine',
    'rewritecond',
    'documentroot',
    'sethandler',
    'errordocument',
    'loadmodule',
    'options',
    'header',
    'listen',
    'serverroot',
    'servername',
]

class attribute:
    default_text = DELIMITER
    rules = [('nomarkup', nomarkup)]

class attribute0:
    default_text = DELIMITER
    rules = [('attribute', RE(r"\w+"), [RE(r"\B|\b")], attribute)]
attribute0.__name__ = 'attribute'

literal = ['on', 'off', 'all']

number = [RE(r"[\$%]\d+")]

class variable:
    default_text = DELIMITER
    rules = [('number', number)]

class _group0:
    default_text = DELIMITER
    rules = [
        ('literal', literal),
        ('meta', RE(r"\s\["), [RE(r"\]$")]),
        ('variable', RE(r"[\$%]\{"), [RE(r"\}")], variable),
        None,  # ('number', number),
        ('string', RE(r"\""), [RE(r"\"")]),
    ]

rules = [
    ('comment', RE(r"#"), [RE(r"$")], comment),
    ('section', RE(r"</?"), [RE(r">")]),
    ('attribute', attribute0, [RE(r"$")], _group0),
]

_group0.rules[3] = ('number', number)

# TODO merge "word_groups" and "delimited_ranges" into "rules" in editxt.syntax
assert "__obj" not in globals()
assert "__fixup" not in globals()
def __fixup(obj):
    groups = []
    ranges = []
    rules = getattr(obj, "rules", [])
    for i, rng in reversed(list(enumerate(rules))):
        if len(rng) == 2:
            groups.append(rng)
        else:
            assert len(rng) > 2, rng
            ranges.append(rng)
    return groups, ranges

class __obj:
    rules = globals().get("rules", [])
word_groups, delimited_ranges = __fixup(__obj)

for __obj in globals().values():
    if hasattr(__obj, "rules"):
        __obj.word_groups, __obj.delimited_ranges = __fixup(__obj)

del __obj, __fixup
