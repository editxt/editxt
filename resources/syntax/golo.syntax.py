# -*- coding: UTF-8 -*-
# Syntax definition automatically generated by hljs2xt.py
# source: golo.js
name = 'Golo'
file_patterns = ['*.golo']

keyword = [
    'println',
    'readln',
    'print',
    'import',
    'module',
    'function',
    'local',
    'return',
    'let',
    'var',
    'while',
    'for',
    'foreach',
    'times',
    'in',
    'case',
    'when',
    'match',
    'with',
    'break',
    'continue',
    'augment',
    'augmentation',
    'each',
    'find',
    'filter',
    'reduce',
    'if',
    'then',
    'else',
    'otherwise',
    'try',
    'catch',
    'finally',
    'raise',
    'throw',
    'orIfNull',
    'DynamicObject',
    'DynamicVariable',
    'struct',
    'Observable',
    'map',
    'set',
    'vector',
    'list',
    'array',
]

literal = ['true', 'false', 'null']

doctag = [RE(r"(?:TODO|FIXME|NOTE|BUG|XXX):")]

class comment:
    default_text = DELIMITER
    rules = [('doctag', doctag)]

number = [RE(r"(\b0[xX][a-fA-F0-9]+|(\b\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?)")]

meta = [RE(r"@[A-Za-z]+")]

rules = [
    ('keyword', keyword),
    ('literal', literal),
    ('comment', RE(r"#"), [RE(r"$")], comment),
    ('string', RE(r"\""), [RE(r"\"")]),
    ('number', number),
    ('meta', meta),
]

# TODO merge "word_groups" and "delimited_ranges" into "rules" in editxt.syntax
assert "__obj" not in globals()
assert "__fixup" not in globals()
def __fixup(obj):
    groups = []
    ranges = []
    rules = getattr(obj, "rules", [])
    for i, rng in reversed(list(enumerate(rules))):
        if len(rng) == 2:
            groups.append(rng)
        else:
            assert len(rng) > 2, rng
            ranges.append(rng)
    return groups, ranges

class __obj:
    rules = globals().get("rules", [])
word_groups, delimited_ranges = __fixup(__obj)

for __obj in globals().values():
    if hasattr(__obj, "rules"):
        __obj.word_groups, __obj.delimited_ranges = __fixup(__obj)

del __obj, __fixup
