EditXT
Copyright 2007-2013 Daniel Miller <millerdev@gmail.com>

This file is part of EditXT, a programmer's text editor for Mac OS X,
which can be found at http://editxt.org/.

EditXT is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

EditXT is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with EditXT.  If not, see <http://www.gnu.org/licenses/>.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Building and packaging

Python environment setup. RECOMMENDED: use a virtualenv
(http://pypi.python.org/pypi/virtualenv). Install dependencies::

    mkvirtualenv --python=/opt/local/bin/python3.5 xt

    pip install --upgrade pip           # pip-6.0.6
    pip install --upgrade setuptools    # setuptools-11.3.1

    # optional: PyYAML with LibYAML
    sudo port install libyaml
    CFLAGS="-I/opt/local/include" pip install pyyaml --global-option="--with-libyaml"

    pip install --requirement=requires.txt

    # Fix py2app console output on Mac OS X 10.9+
    cp resources/py2app-modified-main.c `find $VIRTUAL_ENV -name py2app`/apptemplate/src/main.c
    cd `find $VIRTUAL_ENV -name py2app`/apptemplate
    mv prebuilt prebuilt.old
    python setup.py

Build development/test bundle (EditXTDev.app, necessary for ./xt script)::

    python setup.py py2app -A

Run tests::

    ./xt --test

    # single test::
    ./xt --test --tests editxt.test.test_document:TestTextDocument.test_get_with_path_1

    # test automation
    ./xt --nosy

    # run EditXT in dev mode
    ./xt

Build/package EditXT.app::

    python setup.py py2app

    # package in a zip file for distribution::
    python setup.py py2app --package

Release process:

- Update change log and version number
- Run `python setup.py py2app --package`
- Commit release artifacts (`resources/updater/updates.*`)
- Create release tag (`X.Y.Z`)
- Push release tag: `git push --tags github`
- Create new release on Github with markdown from `changelog.md`
- IMPORTANT: Push master `git push github master`

View release stats:

    curl https://api.github.com/repos/editxt/editxt/releases | grep -E "download_count|tag_name" | less

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Top priority

Fix command autocomplete overlay appearing under main text view
  it happened after `xt path/*.ext` with no match
  then Up Arrow, edit command, Tab (to show completions), observe bug

Make syntax highlighter stop for events
Multi-select in file tree
  - add icon badge (or glowing shadow) to unsaved documents
  - activate unsaved document indocator on window close button
  - remove close button
  - allow drag/move multiple items at once
Show directory path in tree if name matches another document
  tree idea:
  - project
    - directory - main view is list of files in this directory
      - file - name in tree is path relative to directory if in directory
Fix icon in tree on new document with known extension
Always open document after current document
Fix bug in window title after save new document
Aesthetics
  - syntax highlighting
    - better language detection (file extension, shebang line, etc.)
    - custom language/extension mapping in user config
    - themes
      - built-in themes
      - dark theme
    - make it faster when transitioning to/from a delimited range near the beginning of a large document
        http://www.stiefels.net/2008/01/22/syntax-highlighting-for-nstextview-with-flex/
        http://code.activestate.com/recipes/457664-hidden-scanner-functionality-in-re-module/
    - cache syntax definition metadata for faster loading
      - cache summary in cache.json file in definitions dir
      - wait to do this until slow enough to notice
      - profile: loaded 147 defintions in 0.163283s
  - fix bug in line number drawing: soft wrap at end of file?
Fix line counting in TextView.goto_line (should recognize all line break chars)
Pythonic...
  - TextView
  - TreeView
Refactor tests to not depend on py2app bundle
  - this is a problem on 10.9+ unless py2app main.c is modified
Fix stdout/stderr and error output
  - `debug unhandled-error`
    - ./xt on 10.8
      - python traceback printed in...
        - EditXT Log
        - terminal
        - not console.app
      - Objective-C error message + traceback printed in...
        - not EditXT Log
        - terminal
        - console.app
    - ./xt on 10.9 with unmodified py2app main.c
      - python traceback printed in...
        - ? EditXT Log
        - not terminal
        - ? console.app
      - Objective-C error message + traceback printed in...
        - ? EditXT Log
        - not terminal
        - ? console.app
Show error in find dialog when in Python replace mode and replace string is invalid
Fix ack command with --after
  - allow options intermixed with paths (VarArgs dispatch)
Fix ack command
  - wrong default path in project view
  - add support for ag output formatting
Allow command view to be resized by dragging divider
Improve interfaces for creating stand-alone (not shipped with EditXT) commands
Show document pane scroll bar on left side
Move editxt.platform.views.CommandView.KEYS into editxt.platform.const?
Add move command to relocate file on disk
Add py command for quick python command execution
Add "shell" command for shell command execution (allow piping)
Fix intermittent freeze on startup
Fix window title on edge cases (not always up to date)
Fix window dirty indicator
Add automatic file move detection

File tree as main project view
Persistent unsaved docs
Embed file type icons in app (also provide support for user icon sets)

Error (can't figure this one out):
  12/8/14 3:01:08.728 PM EditXT[25351]: ERROR editxt - *** Python exception discarded!
  Traceback (most recent call last):
    File "/Users/dmiller/Applications/EditXT.app/Contents/Resources/lib/python3.3/editxt/controls/linenumberview.py", line 147, in drawHashMarksAndLabelsInRect_
  TypeError: Need 0 arguments, got 1

Project enhancements
  - show sorter paths in recent files list, and elide middle?
  - project base path
  - allow drag/drop from recent files list
  - add support for drag/drop recent files

Select mutliple documents -> main view is a composite view
  multiple concatenated document views (like skype messages pane with)
  banner at top shows title of document in view (like skype date banner)

Project drag/drop bugs
  - Current editor should be focused in new window when its project is dragged to new window
  - Combine and write pythonic wrapper for outline view and NSTreeController
    -> editxt.platform.mac.views.DocumentTreeView
    - ?? Formalize pythonic KVO observe/callback

Display errors and open config files that cannot be loaded automatically
  - Do not overwrite files on save/close

Command bar enhancements:
    contextual command help
        http://pythonhosted.org/Markdown/reference.html#output_format
        NSTextStorage.initWithHTML_documentAttributes_(text, None)
    list history
        tab key should show list of auto complete options and filtered history
    filter history
        up arrow after typing should step through history with same prefix
        all text after manually typed prefix should be selected
    delete history item

Convert commands with gui to work with command bar
    open file(s)
    change indentation

refactor object hierarchy to make it more modular and easier to add features
    app.documents - {id: Document}
    app.windows - [Window]
    ? app.current_window - Window
    app.profile_path
    app.config.right_margin
    app.config.font
    app.config.font_size
    app.syntaxdefs - [SyntaxDefinition]
    ? app.extensions - [Extension]
    app.history - [...] recently closed windows

    window.groups - [Group]
    window.current_group - Group
    window.config - settings like is_config_pane_visible
    window.history - [...] recently closed groups

    group.name
    group.root - path of root directory (default ~)
    group.expanded - bool, is group expanded
    group.editors - [Editor]
    group.current_editor - Editor
    group.history - [...] recently closed editors

    document.path
    document.newline_style
    document.indent_style
    document.indent_width
    document.syntax
    document.encoding
    document.realpath
    document.id - hash of realpath?
    ? document.editors - [Editor]

    editor.document - Document
    editor.group - Group
    editor.position - position of document in editor
    editor.cursor - cursor position
    editor.wrap_lines

    syntax.name
    syntax.path
    syntax.indent_style
    syntax.indent_width
    syntax.newline_style
    ? syntax.wordsets
    ...

work on projects
    add "undo close document" for project
        project will need a concept of recent documents
    implement close document (COMMAND+W)
save untitled and unsaved documents in a temporary location
    allow naming unsaved documents like naming projects
    save undo stack?
save settings in ~/.editxt/config
find/replace text processors

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Bugs

xx Fix line number oddities drawing with non-integral font height
xx - is this a bug in the Inconsolata font? empty line is shorter than line with text

Bug: error in log on toggle System Preferences > Accessibility > Display > Reduce Contrast
ERROR editxt - *** Python exception discarded!
Traceback (most recent call last):
  File "/Users/SharedSSD/Applications/EditXT.app/Contents/Resources/lib/python3.4/editxt/controls/statscrollview.py", line 67, in tile
  File "/Users/SharedSSD/Applications/EditXT.app/Contents/Resources/lib/python3.4/editxt/controls/linenumberview.py", line 58, in calculate_thickness
  File "/Users/SharedSSD/Applications/EditXT.app/Contents/Resources/lib/python3.4/editxt/controls/textview.py", line 57, in font
AttributeError: 'NoneType' object has no attribute 'font'

Bug: scroll to right on enter after last, longer-than-window-width line

Bug: drag/drop results in errors
  focus document
  drag same document from one window to another
  drag same document back to original window
  try to edit text in other window (errors in console)

Bug in Version 1.4.0-pre (20131130.68db8d4)
  - drag a project with at least one document from window1 to window2
  - move (on the filesystem) a document (that is not in focus) of the project
  - focus the document (notice path has changed to where it was moved)
  - make a change, save
  - notice sheet pops up on window1
  - sheet should be on window2
Similar to above Bug in Version 1.4.0-pre (20131130.68db8d4)
  - command bar for documents whose project was dragged new new window
    appears in the (original) wrong window on press COMMAND+;

Bug: memory leak
    TODO track it down and fix it

Bug: save file that has had changes discarded with GitX while open in EditXT
    Should not prompt for save location
    Possibly should show confirm overwrite sheet

editxt.errorlog ERROR - unexpected error
Traceback (most recent call last):
  File "PyObjCTools/AppHelper.pyc", line 235, in runEventLoop
ValueError: NSInvalidArgumentException - -[NSURL _undoRedoTextOperation:]:
    unrecognized selector sent to instance 0x31d5fa0

Bug: click on document in tree view
  ERROR editxt - *** Python exception discarded!
  Traceback (most recent call last):
    File "editxt/platform/mac/window.py", line 151, in outlineViewSelectionDidChange_
    File "editxt/window.py", line 216, in selected_editor_changed
    File "editxt/window.py", line 206, in _set_current_editor
    File "editxt/platform/mac/window.py", line 194, in setup_current_editor
    File "editxt/platform/mac/window.py", line 212, in _update_title
  TypeError: Need 2 arguments, got 1

  ERROR editxt - *** Python exception discarded!
  Traceback (most recent call last):
    File "editxt/platform/mac/views/treeview.py", line 298, in mouseDown_
    File "editxt/platform/mac/window.py", line 151, in outlineViewSelectionDidChange_
    File "editxt/window.py", line 216, in selected_editor_changed
    File "editxt/window.py", line 206, in _set_current_editor
    File "editxt/platform/mac/window.py", line 194, in setup_current_editor
    File "editxt/platform/mac/window.py", line 212, in _update_title
  TypeError: Need 2 arguments, got 1

  12/19/14 3:23:13.051 PM EditXT[999]: (
  	0   CoreFoundation                      0x00007fff95d6db06 __exceptionPreprocess + 198
  	1   libobjc.A.dylib                     0x00007fff914b23f0 objc_exception_throw + 43
  	2   CoreFoundation                      0x00007fff95e01f49 -[NSException raise] + 9
  	3   _objc.so                            0x00000001056475be PyObjCErr_ToObjCWithGILState + 46
  	4   _objc.so                            0x0000000105633db6 PyObjCFFI_MakeClosure + 5174
  	5   _objc.so                            0x000000010562788b ffi_closure_unix64_inner + 619
  	6   _objc.so                            0x0000000105626e76 ffi_closure_unix64 + 70
  	7   AppKit                              0x00007fff950e2644 -[NSApplication sendEvent:] + 5761
  	8   AppKit                              0x00007fff94ff821a -[NSApplication run] + 636
  	9   AppKit                              0x00007fff94f9cbd6 NSApplicationMain + 869
  	10  _AppKit.so                          0x0000000101e7e82b PyInit__AppKit + 7499
  	11  Python                              0x0000000101cdc35e PyEval_EvalFrameEx + 29822
  	12  Python                              0x0000000101cdd4e8 PyEval_EvalCodeEx + 2296
  	13  Python                              0x0000000101cdb977 PyEval_EvalFrameEx + 27287
  	14  Python                              0x0000000101cdbaff PyEval_EvalFrameEx + 27679
  	15  Python                              0x0000000101cdd4e8 PyEval_EvalCodeEx + 2296
  	16  Python                              0x0000000101cdb977 PyEval_EvalFrameEx + 27287
  	17  Python                              0x0000000101cdd4e8 PyEval_EvalCodeEx + 2296
  	18  Python                              0x0000000101cdd5af PyEval_EvalCode + 63
  	19  Python                              0x0000000101cd250e _PyBuiltin_Init + 9982
  	20  Python                              0x0000000101cdc35e PyEval_EvalFrameEx + 29822
  	21  Python                              0x0000000101cdbaff PyEval_EvalFrameEx + 27679
  	22  Python                              0x0000000101cdd4e8 PyEval_EvalCodeEx + 2296
  	23  Python                              0x0000000101cdd5af PyEval_EvalCode + 63
  	24  Python                              0x0000000101d0448b PyRun_FileExFlags + 187
  	25  Python                              0x0000000101d0481d PyRun_SimpleFileExFlags + 717
  	26  EditXT                              0x00000001000043f6 start + 13830
  	27  EditXT                              0x0000000100004b6e main + 1438
  	28  EditXT                              0x0000000100000e24 start + 52
  	29  ???                                 0x0000000000000002 0x0 + 2
  )

  Related:

  ERROR editxt - *** Python exception discarded!
  Traceback (most recent call last):
    File "/Users/SharedSSD/Applications/EditXT.app/Contents/Resources/lib/python3.3/editxt/controls/linenumberview.py", line 147, in drawHashMarksAndLabelsInRect_
  TypeError: Need 0 arguments, got 1

  12/21/14 9:56:54.868 AM EditXT[30170]: (
  	0   CoreFoundation                      0x00007fff949a3b06 __exceptionPreprocess + 198
  	1   libobjc.A.dylib                     0x00007fff8fc363f0 objc_exception_throw + 43
  	2   CoreFoundation                      0x00007fff94a37f49 -[NSException raise] + 9
  	3   _objc.so                            0x00000001056475be PyObjCErr_ToObjCWithGILState + 46
  	4   _objc.so                            0x0000000105633db6 PyObjCFFI_MakeClosure + 5174
  	5   _objc.so                            0x000000010562788b ffi_closure_unix64_inner + 619
  	6   _objc.so                            0x0000000105626e76 ffi_closure_unix64 + 70
  	7   AppKit                              0x00007fff99acc064 -[NSView _drawRect:clip:] + 4217
  	8   AppKit                              0x00007fff99aca6c1 -[NSView _recursiveDisplayAllDirtyWithLockFocus:visRect:] + 1656
  	9   AppKit                              0x00007fff9994ed2a -[NSRulerView _recursiveDisplayAllDirtyWithLockFocus:visRect:] + 1041
  	10  AppKit                              0x00007fff99acaad9 -[NSView _recursiveDisplayAllDirtyWithLockFocus:visRect:] + 2704
  	11  AppKit                              0x00007fff99acaad9 -[NSView _recursiveDisplayAllDirtyWithLockFocus:visRect:] + 2704
  	12  AppKit                              0x00007fff99acaad9 -[NSView _recursiveDisplayAllDirtyWithLockFocus:visRect:] + 2704
  	13  AppKit                              0x00007fff99ac86f2 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:] + 817
  	14  AppKit                              0x00007fff99ac9a44 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:] + 5763
  	15  AppKit                              0x00007fff99ac9a44 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:] + 5763
  	16  AppKit                              0x00007fff99ac9a44 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:] + 5763
  	17  AppKit                              0x00007fff99ac8143 -[NSThemeFrame _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:] + 314
  	18  AppKit                              0x00007fff99ac3d6d -[NSView _displayRectIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:] + 4675
  	19  AppKit                              0x00007fff99a8dc93 -[NSView displayIfNeeded] + 1830
  	20  AppKit                              0x00007fff99a8d1cc _handleWindowNeedsDisplayOrLayoutOrUpdateConstraints + 738
  	21  AppKit                              0x00007fff9a058901 __83-[NSWindow _postWindowNeedsDisplayOrLayoutOrUpdateConstraintsUnlessPostingDisabled]_block_invoke_01208 + 46
  	22  CoreFoundation                      0x00007fff9496a417 __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ + 23
  	23  CoreFoundation                      0x00007fff9496a381 __CFRunLoopDoObservers + 369
  	24  CoreFoundation                      0x00007fff949457b8 __CFRunLoopRun + 728
  	25  CoreFoundation                      0x00007fff949450e2 CFRunLoopRunSpecific + 290
  	26  HIToolbox                           0x00007fff8f60aeb4 RunCurrentEventLoopInMode + 209
  	27  HIToolbox                           0x00007fff8f60ab94 ReceiveNextEventCommon + 166
  	28  HIToolbox                           0x00007fff8f60aae3 BlockUntilNextEventMatchingListInMode + 62
  	29  AppKit                              0x00007fff99a8a533 _DPSNextEvent + 685
  	30  AppKit                              0x00007fff99a89df2 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 128
  	31  AppKit                              0x00007fff99a811a3 -[NSApplication run] + 517
  	32  AppKit                              0x00007fff99a25bd6 NSApplicationMain + 869
  	33  _AppKit.so                          0x00000001007c982b PyInit__AppKit + 7499
  	34  Python                              0x00000001024dc35e PyEval_EvalFrameEx + 29822
  	35  Python                              0x00000001024dd4e8 PyEval_EvalCodeEx + 2296
  	36  Python                              0x00000001024db977 PyEval_EvalFrameEx + 27287
  	37  Python                              0x00000001024dbaff PyEval_EvalFrameEx + 27679
  	38  Python                              0x00000001024dd4e8 PyEval_EvalCodeEx + 2296
  	39  Python                              0x00000001024db977 PyEval_EvalFrameEx + 27287
  	40  Python                              0x00000001024dd4e8 PyEval_EvalCodeEx + 2296
  	41  Python                              0x00000001024dd5af PyEval_EvalCode + 63
  	42  Python                              0x00000001024d250e _PyBuiltin_Init + 9982
  	43  Python                              0x00000001024dc35e PyEval_EvalFrameEx + 29822
  	44  Python                              0x00000001024dbaff PyEval_EvalFrameEx + 27679
  	45  Python                              0x00000001024dd4e8 PyEval_EvalCodeEx + 2296
  	46  Python                              0x00000001024dd5af PyEval_EvalCode + 63
  	47  Python                              0x000000010250448b PyRun_FileExFlags + 187
  	48  Python                              0x000000010250481d PyRun_SimpleFileExFlags + 717
  	49  EditXT                              0x00000001000043f6 start + 13830
  	50  EditXT                              0x0000000100004b6e main + 1438
  	51  EditXT                              0x0000000100000e24 start + 52
  	52  ???                                 0x0000000000000002 0x0 + 2
  )


fix bug: drag symlink into documents pane
    Exception Type:  EXC_BAD_ACCESS (SIGBUS)
    Exception Codes: KERN_PROTECTION_FAILURE at 0x0000000000000010
    Crashed Thread:  0  Dispatch queue: com.apple.main-thread

    Thread 0 Crashed:  Dispatch queue: com.apple.main-thread
    0   libSystem.B.dylib             	0x954574b0 strlen + 16
    1   com.apple.CoreFoundation      	0x92ff0676 _CFStringAppendFormatAndArgumentsAux + 3894
    2   com.apple.CoreFoundation      	0x92fef709 _CFStringCreateWithFormatAndArgumentsAux + 105
    3   com.apple.Foundation          	0x92579a53 -[NSPlaceholderString initWithFormat:locale:arguments:] + 163
    4   com.apple.Foundation          	0x92579906 +[NSString stringWithFormat:] + 88
    5   _objc.so                      	0x029ed526 PyObjCErr_AsExc + 1014
    6   _objc.so                      	0x029ed64d PyObjCErr_ToObjCWithGILState + 29
    7   _objc.so                      	0x029d0414 method_stub + 756
    8   _objc.so                      	0x029c2505 ffi_closure_SYSV_inner + 149
    9   _objc.so                      	0x029c2132 ffi_closure_SYSV + 34
    10  com.apple.AppKit              	0x936c5123 -[NSOutlineView performDragOperation:] + 280
    11  com.apple.AppKit              	0x93588879 NSCoreDragReceiveProc + 1457
    12  com.apple.HIServices          	0x983565fd DoDropMessage + 104
    13  com.apple.HIServices          	0x98357a36 CoreDragMessageHandler + 1250
    14  com.apple.CoreFoundation      	0x9309692c __CFMessagePortPerform + 540
    15  com.apple.CoreFoundation      	0x9300216b __CFRunLoopRun + 6523
    16  com.apple.CoreFoundation      	0x930000f4 CFRunLoopRunSpecific + 452
    17  com.apple.CoreFoundation      	0x92ffff21 CFRunLoopRunInMode + 97
    18  com.apple.HIToolbox           	0x9281d15c RunCurrentEventLoopInMode + 392
    19  com.apple.HIToolbox           	0x9281ce4d ReceiveNextEventCommon + 158
    20  com.apple.HIToolbox           	0x9281cd96 BlockUntilNextEventMatchingListInMode + 81
    21  com.apple.AppKit              	0x9321b0fd _DPSNextEvent + 847
    22  com.apple.AppKit              	0x9321a93e -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 156
    23  com.apple.AppKit              	0x931dcbc7 -[NSApplication run] + 821
    24  com.apple.AppKit              	0x931d4c5d NSApplicationMain + 574
    25  _appmain.so                   	0x044d8b72 objc_NSApplicationMain + 466

Bug: selected document out of sync with active document on drag-n-drop
    (reported by Joel on Oct 15, 2010)
    * open a new project
    * open two additional new documents (the document panel on the left should
      now look as follows)
        untitled project
            Untitled
            Untitled 2
            Untitled 3
    * type something unique in each of the three untitled documents
      (for identifying the active document later)
    * select (activate) the first document "Untitled"
    * drag and drop "Untitled" below "Untitled 3"
    BUG: observe; "Untitled" is still the active document, but "Untitled 3" is
    now the selected document in the left pane.
    EXPECTED: "Untitled" should still be the selected document.

    Final note: There are some other drag-and-drop actions that cause this
    behavior, I haven't been able to identify them all.

Bug: closing duplicate dirty file (reported by Joel on Jul 20, 2010)
    * Open EditXT
    * Open a file
    * Make a change to the file
    * If only one project is available, create a new one
    * In the document browser, drag the above-mentioned dirty file into a different project
    * Observe; the dirty file now exists in both projects (expected)
    * Close one of the two (duplicate) files

    BUG: Observe; the user is prompted to save the file.
    EXPECTED: The document should "close" (or rather, simply be removed from
    that project) silently because it still exists in another project.
    
    On second thought... I don't know what the best result here WOULD be.  Say
    the user has LOTS of projects/documents open, some of the documents are
    open in multiple projects (for whatever reason); if (s)he closes a dirty
    file (not remembering that it exists in other project(s)), maybe it is best
    to get the save dialog.  I don't know, what do you think?

fix bug: related to Python syntax highlighting and """ string at the end of the file
    editxt.textcommand ERROR - <function delete_backward at 0x5690c70> failed
    Traceback (most recent call last):
     File "editxt/textcommand.pyc", line 480, in do_textview_command_by_selector
     File "editxt/textcommand.pyc", line 324, in delete_backward
     File "editxt/document.pyc", line 653, in textStorageDidProcessEditing_
     File "editxt/syntax.pyc", line 98, in color_text
     File "editxt/syntax.pyc", line 159, in adjust
    IndexError: list assignment index out of range

    editxt.errorlog ERROR - unexpected error
    Traceback (most recent call last):
     File "PyObjCTools/AppHelper.pyc", line 235, in runEventLoop
    IndexError: NSRangeException - *** -[NSBigMutableString characterAtIndex:]: Range or index out of bounds

    editxt.textcommand ERROR - <function delete_backward at 0x5690c70> failed
    Traceback (most recent call last):
     File "editxt/textcommand.pyc", line 480, in do_textview_command_by_selector
     File "editxt/textcommand.pyc", line 309, in delete_backward
    IndexError: string index out of range

    editxt.errorlog ERROR - unexpected error
    Traceback (most recent call last):
     File "PyObjCTools/AppHelper.pyc", line 237, in runEventLoop
    IndexError: NSRangeException - *** -[NSBigMutableString characterAtIndex:]: Range or index out of bounds

fix bug:
    editxt.errorlog ERROR - unexpected error
    Traceback (most recent call last):
      File "PyObjCTools/AppHelper.pyc", line 235, in runEventLoop
      File "editxt/controls/textview.pyc", line 22, in performFindPanelAction_
      File "editxt/findpanel.pyc", line 88, in perform_action
      File "editxt/findpanel.pyc", line 94, in show_find_panel
    AttributeError: 'NoneType' object has no attribute 'selectText_'

fix bug: try to drag splitview by handle in project bar
    editxt.errorlog ERROR - unexpected error
    Traceback (most recent call last):
      File "/Users/dmiller/Code/EditXT/virtualenv/lib/python2.6/site-packages/
        pyobjc_framework_Cocoa-2.2-py2.6-macosx-10.3-fat.egg/PyObjCTools/AppHelper.py", line 237, in runEventLoop
        NSApp().run()
      File "/Users/dmiller/Code/EditXT/src/editxt/controls/splitview.py", line 212, in mouseDragged_
        self.splitView.mouseDragged_(event)
    AttributeError: 'SliderImageView' object has no attribute 'splitView'

fix bug: error on quit
    2010-06-29 23:24:42.263 EditXTDev[11519:607] *** ObjC exception 'OC_PythonException'
        (reason: '<type 'exceptions.AttributeError'>:
        'NoneType' object has no attribute 'widthTracksTextView'') discarded
    Stack trace (most recent call last):
      0x00000002 (in EditXTDev)
      start (in EditXTDev) + 41
      _start (in EditXTDev) + 209
      main (in EditXTDev) + 297
      py2app_main (in EditXTDev) + 1503
      PyRun_SimpleFile (in libpython2.6.dylib) + 40
      PyRun_SimpleFileExFlags (in libpython2.6.dylib) + 867
      PyRun_FileExFlags (in libpython2.6.dylib) + 168
      PyEval_EvalCode (in libpython2.6.dylib) + 87
      PyEval_EvalCodeEx (in libpython2.6.dylib) + 2109
      PyEval_EvalFrameEx (in libpython2.6.dylib) + 19916
      PyEval_EvalCodeEx (in libpython2.6.dylib) + 2109
      PyEval_EvalFrameEx (in libpython2.6.dylib) + 19429
      builtin_execfile (in libpython2.6.dylib) + 398
      PyRun_FileExFlags (in libpython2.6.dylib) + 168
      PyEval_EvalCode (in libpython2.6.dylib) + 87
      PyEval_EvalCodeEx (in libpython2.6.dylib) + 2109
      PyEval_EvalFrameEx (in libpython2.6.dylib) + 21862
      PyEval_EvalFrameEx (in libpython2.6.dylib) + 19916
      PyEval_EvalCodeEx (in libpython2.6.dylib) + 2109
      PyEval_EvalFrameEx (in libpython2.6.dylib) + 19429
      objc_NSApplicationMain (in _appmain.so) + 466
      NSApplicationMain (in AppKit) + 574
      -[NSApplication run] (in AppKit) + 917
      -[NSApplication sendEvent:] (in AppKit) + 4858
      -[NSApplication _handleKeyEquivalent:] (in AppKit) + 581
      -[NSMenu performKeyEquivalent:] (in AppKit) + 314
      -[NSMenu _performActionWithHighlightingForItemAtIndex:] (in AppKit) + 49
      -[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:] (in AppKit) + 174
      -[NSMenuItem _corePerformAction] (in AppKit) + 435
      -[NSApplication sendAction:to:from:] (in AppKit) + 112
      -[NSApplication terminate:] (in AppKit) + 713
      -[NSNotificationCenter postNotificationName:object:] (in Foundation) + 56
      -[NSNotificationCenter postNotificationName:object:userInfo:] (in Foundation) + 128
      _CFXNotificationPostNotification (in CoreFoundation) + 186
      __CFXNotificationPost (in CoreFoundation) + 947
      _nsnote_callback (in Foundation) + 176
      ffi_closure_SYSV (in _objc.so) + 34
      ffi_closure_SYSV_inner (in _objc.so) + 149
      method_stub (in _objc.so) + 756
      PyObjCErr_ToObjCWithGILState (in _objc.so) + 63
      -[NSException raise] (in CoreFoundation) + 17
      objc_exception_throw (in libobjc.A.dylib) + 56
      NSExceptionHandlerExceptionRaiser (in ExceptionHandling) + 182
    2010-06-29 23:24:42.266 EditXTDev[11519:607] *** Python exception discarded!
    Traceback (most recent call last):
      File "/Users/dmiller/Code/EditXT/src/editxt/application.py", line 336, in applicationWillTerminate_
        self.controller.app_will_terminate(notification.object())
      File "/Users/dmiller/Code/EditXT/src/editxt/application.py", line 286, in app_will_terminate
        self.save_open_projects(defaults)
      File "/Users/dmiller/Code/EditXT/src/editxt/application.py", line 229, in save_open_projects
        serial = editor.serialize()
      File "/Users/dmiller/Code/EditXT/src/editxt/editor.py", line 113, in serialize
        return dict((key, val) for key, val in iter_settings() if val)
      File "/Users/dmiller/Code/EditXT/src/editxt/editor.py", line 113, in <genexpr>
        return dict((key, val) for key, val in iter_settings() if val)
      File "/Users/dmiller/Code/EditXT/src/editxt/editor.py", line 96, in iter_settings
        serial = project.serialize()
      File "/Users/dmiller/Code/EditXT/src/editxt/project.py", line 64, in serialize
        return self.serialize_full()
      File "/Users/dmiller/Code/EditXT/src/editxt/project.py", line 73, in serialize_full
        documents = [s for s in states if "path" in s]
      File "/Users/dmiller/Code/EditXT/src/editxt/project.py", line 72, in <genexpr>
        states = (d.edit_state for d in self._documents)
      File "/Users/dmiller/Code/EditXT/src/editxt/document.py", line 279, in _get_edit_state
        wrap_mode=self.wrap_mode,
      File "/Users/dmiller/Code/EditXT/src/editxt/document.py", line 178, in _get_wrap_mode
        wrap = self.text_view.textContainer().widthTracksTextView()
    AttributeError: 'NoneType' object has no attribute 'widthTracksTextView'
    2010-06-29 23:24:42.268 EditXTDev[11519:607] <type 'exceptions.AttributeError'>:
        'NoneType' object has no attribute 'widthTracksTextView'

The following two tests fail when test_mockerext is run first followed by the entire test suite
    ======================================================================
    ERROR: test_editxt.test_mockerext.test_MockerExt_property(
      <objective-c class NSObject at 0xa04bdcc0>, <function <lambda> at 0x1830d070>)
    ----------------------------------------------------------------------
      ...
    error: T is overriding existing Objective-C class

    ======================================================================
    ERROR: Failure: error (PySubclass is overriding existing Objective-C class)
    ----------------------------------------------------------------------
      ...
    error: PySubclass is overriding existing Objective-C class

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

Projects:
    Most important new features to implement:
        Allow project to be open in more than one window at once
        Enhanced recent documents list
        Remember editor settings per document
        Save project to file (.edxt)
        Add subclass of NSDocument to represent project document

    project.Project - plain python object, manages list of DocInfo objects
    project.ProjectView - what used to be project.Project
    document.DocInfo - plain python object, manages document info

put the selected text at the top of the recent finds menu (in Find/Replace)
put text processors in the recent replaces menu

x need some way to view/change settings
x    option 1 - put menu in the status bar (like TextWrangler)
x    option 2 - implement document properties view below document selector
x implement line endings
x    python -c 'print repr(open("Desktop/newline.txt").read())'
x implement space-filled tabs
x    intent with correct character(s) on keypress (tab/shift tab) or auto-indent
x    prompt to convert file on mode change
x    delete multiple spaces when deleting backward in space-indent mode
x    detect indent mode in file when opened (fallback to indent mode specified in syntax definition)
xx    skip spaces when moving with arrow keys when in space-indent mode
    convert pasted text
implement syntax definitions
x implement file encodings
x implement word wrap
x    bug: set view to word-wrap mode, switch to a different document, switch back (no vertical scroll bar)
x        precondition: the document should not have a vertical scrollbar when NOT in word wrap mode
x        precondition: it should have a vertical scrollbar when in word wrap mode
    bug: while scrolled down in a document enable word wrap -> scrolls to top

bug: open editor with two windows saved in prefs
    (each window having two document views of the same documents,
        with the same document selected in each window)
    view document other than the document that opens by default
    focus second window, view document

x things to put in the document attributes panel:
x    word wrap
x    line ending style
x    spaces instead of tabs
x    tab width
x    character encoding
xx    font - this could remain in the context menu
x    syntax highlighting type

SERIOUS Bug: sometimes documents do not track dirty status
    one time this occurred after editing a file on a network share
    although it has happened at other times when no shared docs were being edited
Bug: when editing large files sometimes the line below the edited line disappears
Bug: file encoding should be explicitly set on save
Bug: document shifts to the left when lines are longer than window width
Bug: cannot open project in two windows at same time (views are shared, but should not be)
Bug: window controller hides next window controller on close with dirty documents (while editing clean doc)

Improve LineNumberView implementation
    Fix drawing of line numbers > 99
    Implement word-wrap line numbering

Project persistence
x     When a project with no path is saved it will be saved in the user
x     preferences. As long as the project is open in the editor and has no path it
x     will remain in the user preferences. When the project is manually closed or
x     when the editor is closed and the project has only unsaved documents it will
x     be removed from the user preferences.

    A project may be saved to disk, at which point it gains a path
    (project.path is not None). If project path is not None but the file does
    not exist (e.g. if the file was deleted) then the project will be saved in
    the user preferences and its path will be discarded.
    
Add a recent documents view as the project main view
    Should allow opening documents that have been closed
    Should allow commands (diff, etc) between documents

Fix selection changing behavior in documents view:
x    On startup select current text document
x    On select document display document's TextView in editor window
xx    On select project revert selection to previously selected document
    On collapse project with active document
        activate most recently active document among visible documents
        clear text area if no documents are visible
    On select collapsed project expand project and select most recently selected document

Fix bugs in splitview:
    combine MailStyle...View and SliderImageView into a single view - 
        Draw the left, center, and right sides of the view independently
        MailStyle...View covers SliderImageView when resizing the splitview too
        small (to the left) (min fixed width ThinSplitView must be about 60)
    fix bug: SliderImageView cannot collapse/uncollapse its splitview


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Improvement ideas

Add better support for TextCommands
    make it simple to create/edit text commands
    put a save hook on the command source file when editing it so that the editor
        reloads the command(s) in that file when the file is saved

Improve projects:
    record all open projects on File->Quit
    allow a new project to be created without first choosing a location where it will be saved
    allow multiple projects per window (use project name as divider between document "groups")
    allow document to be opened in new window (and/or dragged to a different window)

Documents list
    fix drag/move documents - use path instead of index range
    add context menu
    allow text commands to be added to documents list text menu
        svn diff
        diff with...

Improve text view
    syntax highlighting for multiple document types
x    status area in lower-left (beside bottom scrollbar)
x        current row/column/selection length
        line-ending style
x    text view state elements (stored in project file):
x        scroll position
x        selection range
        font setting?
        word wrap state?
        line number ruler state?

Preferences system
    font
    tab width (custom per syntax definition type and open document)
    etc.

Add "Search all documents" feature to find/replace dialog
Make find-count status area into a sliding view in the find/replace text field

Improve TextCommands
    hotkey handling
    add more commands
        hard-wrap
        sort lines
        change case (and variants)
    allow text commands to be added to the context menu

Add split view feature (split documents list as well)

Add untitled document to default project on startup.
    Give default project a name other than "Untitled" on startup so the first
        document gets some other name
    Alternate: create a new project and use it to open a document if no projects are open

x Implement project/document relationship.

startup controllflow:
x     startup (no document)
x         if default project does not exist:    
x             write new default project to disk
x         proj = ProjectDocument(defaultProjectPath)
x         proj.newTextDocument()
    startup with text document path
        if default project does not exist:
            write new default project to disk
        proj = ProjectDocument(defaultProjectPath)
        proj.openTextDocument(path)
    startup with project
        proj = ProjectDocument(projectPath)

Other editors (ideas)
    http://www.sublimetext.com/blog/

Show all characters
    http://stackoverflow.com/questions/300086/display-hidden-characters-in-nstextview

Vertically centered text in document list:
    http://www.red-sweater.com/blog/148/what-a-difference-a-cell-makes

Quickies reference:
    http://www.borkware.com/quickies/one?topic=NSTextView

Cocoa Bindings Examples and Hints
    http://homepage.mac.com/mmalc/CocoaExamples/controllers.html
    http://www.cocoadevcentral.com/articles/000080.php

File encodings
  http://rixstep.com/2/2/20080320,00.shtml
  See TextEdit source code, esp. openWithEncodingAccessory

NSTreeController extensions:
    http://svn.sbooth.org/play/trunk/ThirdParty/NSTreeController_Extensions/NSTreeController_Extensions.m

NSTreeController and Drag and Drop: http://theocacao.com/document.page/130

Log filtering
    http://stackoverflow.com/questions/1383254/logging-streamhandler-and-standard-streams

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
EditXT Design

Slogan: EditXT - the editor that remembers where you were

Profile structure:
    .editxt
        cache
            document-N
                ...
        editors
            editor-N.yaml
        ext
        syntax
        config.yaml

Discussion of documents in EditXT

There are two kinds of documents in EditXT: text documents and projects. Text
documents will respond to the complete set of document actions such as New,
Open, Save, Close, etc. Projects only respond to a subset of these actions;
namely New Project, Open Project and Close Project. Projects do not need an
undo manager. 

When a document is opened it may be one of two things: ProjectDocument or TextDocument
    If it is a ProjectDocument then a new project window should be loaded.
    If it is a TextDocument then it should be opened in the current project.
    A new project should be opened if there is no current project.
        This probably needs to happen at the DocumentController level.
    
NSDocumentController (canned ObjC class, not extended)
    maintains a list of the documents that are currently open
    options for the "Window" menu:
xx        list all documents in a hierarchical structure (project has submenu of documents)
xx        list all documents (not projects)
        list current document of each project window

NSWindowController
    Tasks overview:
        Loading and displaying the window
        Closing the window when appropriate
        Customizing the window's title
        Storing the window's frame (size and location) in the defaults database
        Cascading the window in relation to other document windows of the application
    Note that all of these tasks are specific to a ProjectDocument. It would
    follow that a TextDocument only needs a stub of a window controller, and
    that is only necessary if/because NSDocument must have a window controller
    (verify this).
    
    Find out how NSDocument is connected to controls (widgets) and how dirty
    detection happens (through undo manager). The connection is probably this:
        NSDocument -> UndoManager -> widget
    there may be some things in between those elements, what are they?

Options for ProjectDocument (PD) and TextDocument (TD)
    See this first: http://www.cocoadev.com/index.pl?DocumentBasedAppWithOneWindowForAllDocuments
    PD inherits NSDocument
      pros
        it loads and saves data to a file (but only programatically)
        it is has a window
        it can take advantage of NSWindowController
        it should appear in the top level of the Window menu
      cons
        a project is never explicitly saved (it is saved when a document is saved)
    TD inherits NSDocument
      pros
        it loads and saves data to a file
        it needs an undo manager
      cons
        it does not have its own window
        it cannot take advantage of NSWindowController
        it should not appear in the top level of the Window menu

ProjectDocument
    menu actions:
        new project (maybe prompt to create new proj. with all open documents?)
        open project
        close project
    is represented by a file
    contains multiple documents
    does not need undo/redo capability
    can be opened/closed (saved?? must happen without user interaction)
        the only time a project will ever be saved is when the user modifies and
        saves at least one text document

TextDocument
    is represented by a file
    can be opened, closed, saved, reverted, etc. (all the normal file operations)
    Attributes:
        name
        path
        icon
        syntax_def
        length (number of lines)
        width (number of characters, lazily calculated based on lines that have been seen)
        current_line

The WindowController for TextDocument will NOT manage an actual window. Instead
    it will manage an entry in the document list as well as the text view (contents?)
    for its document, as well as any other resources associated with the document.

problem: the inherited NSDocument implementation of ProjectDocument thinks
    the ProjectDocument is dirty if the contents of the textview have been
    changed since the main text view is part of the project window.
side affects
    project window prompts for save (as name of project) on close (we do not want this)
    TextDocument does not know it is dirty
implications:
    ProjectDocument needs to override parts of NSDocument that cause the save prompt.
    TextDocument needs to prompt for save if it is dirty when its project is closed.

Q. What is the biggest text file that this editor must easily handle without
excessive delays in loading, searching, etc.?
A. As large as can be comfortably navigated with the scrollbar on the side of
the main text view.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

